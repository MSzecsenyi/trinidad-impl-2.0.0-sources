<?xml version="1.0" encoding="utf-8"?>
<faces-config xmlns="http://java.sun.com/xml/ns/javaee" xmlns:tr="http://myfaces.apache.org/trinidad" xmlns:trh="http://myfaces.apache.org/trinidad/html" xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata" xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin" xmlns:mafp="http://xmlns.oracle.com/maven-adf-faces-plugin" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd" metadata-complete="true" version="2.0">
   <name>trinidad</name>
   <ordering>
      <after>
         <others/>
      </after>
   </ordering>
   <application>
      <view-handler>org.apache.myfaces.trinidadinternal.application.ViewHandlerImpl</view-handler>
      <state-manager>org.apache.myfaces.trinidadinternal.application.StateManagerImpl</state-manager>
      <navigation-handler>org.apache.myfaces.trinidadinternal.application.NavigationHandlerImpl</navigation-handler>
      <el-resolver>org.apache.myfaces.trinidadinternal.el.TrinidadELResolver</el-resolver>
   </application>
   <factory>
      <faces-context-factory>
      org.apache.myfaces.trinidadinternal.context.FacesContextFactoryImpl
    </faces-context-factory>
      <partial-view-context-factory>
      org.apache.myfaces.trinidadinternal.context.PartialViewContextFactoryImpl
    </partial-view-context-factory>
      <render-kit-factory>org.apache.myfaces.trinidadinternal.renderkit.CoreRenderKitFactory</render-kit-factory>
      <view-declaration-language-factory>
      org.apache.myfaces.trinidadinternal.application.ViewDeclarationLanguageFactoryImpl
    </view-declaration-language-factory>
   </factory>
   <component>
      <description>The Apache Trinidad TreeTable is used to display data that is structured in a hierarchical format.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.TreeTable</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXTreeTable</component-class><!--org.apache.myfaces.trinidad.Tree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported, 
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.  In a treeTable, this must be a column.
      </description>
         <facet-name>nodeStamp</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Tree properties-->
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
          Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type 
        org.apache.myfaces.trinidad.model.TreeModel</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the rowKey of the currently focused row.
        The rowKeys of the ancestor rows of the focus row are added
        to the expandedRowKeys RowKeySet by default.
      </description>
         <property-name>focusRowKey</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a focus listener</description>
         <property-name>focusListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If upon initial rendering, the current subtree under the focused row path
        should be expanded. A RowDisclosureEvent is broadcast from the encode begin of the 
        component so that listeners are properly notified of the disclosure.
      </description>
         <property-name>initiallyExpanded</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.TreeTable properties-->
      <property>
         <description>
        
          If the root node should be rendered or not. Defaults to true.
        
      </description>
         <property-name>rootNodeRendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of records that can be displayed at
              one time (range size).
              Each level of depth in the tree can have a different range size.
              The first number in the array sets the range size for the root
              collection. Each subsequent number sets the range size for the
              corresponding depth. The last number becomes the default for
              each subsequent level of depth.

              If a node has more children than
              the range size, navigation rows will be rendered above and
              below the child nodes.
      </description>
         <property-name>rowsByDepth</property-name>
         <property-class>int[]</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.TreeTable</component-family>
         <renderer-type>org.apache.myfaces.trinidad.BaseTreeTable</renderer-type>
         <component-metadata/>
         <unsupported-agents>pda phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreColumn</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Base class for components that provide
layout for their children.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Panel</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXPanel</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Group</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>go is a base abstraction for components like goButton and goLink
          that are used to navigate directly to a different page without
          any server-side actions.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/go.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.Go</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXGo</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Go properties-->
      <property>
         <description>the URI this go component references</description>
         <property-name>destination</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Go</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Go</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>Signifies an element that can contain a series of UIXCommand components.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Menu</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXMenu</component-class><!--org.apache.myfaces.trinidad.Menu facets-->
      <facet>
         <description>the popup menu associated with this menu</description>
         <facet-name>popupMenu</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Menu</component-family>
         <renderer-type>org.apache.myfaces.trinidad.List</renderer-type>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>basePage is the base abstraction for a page</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Page</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXPage</component-class><!--org.apache.myfaces.trinidad.Page facets-->
      <facet>
         <description>the component to use to stamp each element in the
              menu. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Page properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of menu data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation 
          should be skipped when row disclosure
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--Warning: this component has no component-family!-->
      <component-extension/>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Page</component-family>
         <renderer-type>org.apache.myfaces.trinidad.BasePage</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXMessage is the base component class for components
that display a single message on behalf of a component.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Message</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXMessage</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Message properties-->
      <property>
         <description>the relative ID from this component to the component whose messages will be displayed</description>
         <property-name>for</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Message</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Message</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>showDetail is a base component abstraction for components
          that can toggle between showing and hiding all of their
          children.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.ShowDetail</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXShowDetail</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ShowDetail properties-->
      <property>
         <description>whether or not to disclose the children</description>
         <property-name>disclosed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>stops the local value of disclosed from being set
        by renderers. This allows the value to always be taken from the value of the disclosed
        value expression. Disclosed values must be updated in other ways (i.e. from a
        disclosure listener)</description>
         <property-name>disclosedTransient</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side - should be skipped when
          events are generated by this component.

          When immediate is false (the default), the disclosure event will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true, the disclosure
          event will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a disclosure listener</description>
         <property-name>disclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowDetail</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ShowDetail</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXSelectMany is a base abstraction for 
          components that allow selection of multiple of a
    series of selectItem controls, where order
          is not relevant.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectMany</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectMany</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectMany</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Listbox</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Subform</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSubform</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Subform properties-->
      <property>
         <description>whether the subform should assume it
has been submitted.  When set to "true", "submitted" will be
considered true if no other subform has been submitted.
      </description>
         <property-name>default</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Subform</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Subform</renderer-type>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>The poll component initiates poll to the server.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Poll</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXPoll</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Poll properties-->
      <property>
         <description>whether data validation 
          should be skipped when poll
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a poll listener</description>
         <property-name>pollListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Poll</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Poll</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The switcher component dynamically decides which facet component
should be rendered.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/switcher.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.Switcher</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSwitcher</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Switcher properties-->
      <property>
         <description>the name of the facet to render and process.</description>
         <property-name>facetName</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the name of the facet to render and process if "facetName"
              is null or otherwise does not refer to an existing facet.
      </description>
         <property-name>defaultFacet</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Switcher</component-family>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>childName</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelBorderLayout component is a layout element which lays out all of its
          children consecutively in its middle, and supports the following
          facets: top, bottom, left, right, start, end, innerTop, innerBottom, innerLeft, innerRight, innerStart, and innerEnd
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelBorderLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelBorderLayout</component-class><!--org.apache.myfaces.trinidad.CorePanelBorderLayout facets-->
      <facet>
         <description>Content to be rendered above the children.
      </description>
         <facet-name>top</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered below the children.
      </description>
         <facet-name>bottom</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the left of the children and
                between any top and bottom facets.
      </description>
         <facet-name>left</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the right of the children and
                between any top and bottom facets.
      </description>
         <facet-name>right</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the left of the children and
                between any top and bottom facets, if the reading direction is
                left-to-right, on the right otherwise.
      </description>
         <facet-name>start</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the right of the children and
                between any top and bottom facets, if the reading direction is
                left-to-right, on the left otherwise.
      </description>
         <facet-name>end</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered above the children, inside of 'top'.
      </description>
         <facet-name>innerTop</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered below the children, but above 'bottom'.
      </description>
         <facet-name>innerBottom</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the left of the children and
                between any innerTop and innerBottom facets, to the right of the left facet.
      </description>
         <facet-name>innerLeft</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>Content to be rendered to the right of the children and
                between any innerTop and innerBottom facets.
      </description>
         <facet-name>innerRight</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>the equivalent of innerLeft on left-to-right clients and innerRight on right-to-left clients.
      </description>
         <facet-name>innerStart</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>the equivalent of innerRight on left-to-right clients and innerLeft on right-to-left clients.
      </description>
         <facet-name>innerEnd</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelBorderLayout properties-->
      <property>
         <description>
        Changes how the panel is rendered. The default is to expand the panel to fix the size of its contents.
        Setting the value to positioned will force the panel to use the size given to it via CSS (either via the
        styleClass, inlineStyle or via the skin). The facets are sized using the height and width attributes and
        the center is given the remainder. With a positioned layout the height and width should be set and the
        position should be set to relative or absolute. Note that due to limitations in IE6, the positioned layout
        uses JavaScript resizing that will affect performance. Expand is the default.
      </description>
         <property-name>layout</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>expand</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>expand positioned</fmd:property-values>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS height to give to the top facet in valid CSS units.
        Used if the layout is positioned and the top facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>topHeight</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS height to give to the bottom facet in valid CSS units.
        Used if the layout is positioned and the bottom facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>bottomHeight</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS height to give to the inner top facet in valid CSS units.
        Used if the layout is positioned and the inner top facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>innerTopHeight</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS height to give to the inner bottom facet in valid CSS units.
        Used if the layout is positioned and the inner bottom facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>innerBottomHeight</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the start facet in valid CSS units.
        Used if the layout is positioned and the start facet is present and rendered and the left or right facet
        is not used instead. Defaults to 25%.
      </description>
         <property-name>startWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the end facet in valid CSS units.
        Used if the layout is positioned and the end facet is present and rendered and the left or right facet
        is not used instead. Defaults to 25%.
      </description>
         <property-name>endWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the left facet in valid CSS units.
        Used if the layout is positioned and the left facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>leftWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the right facet in valid CSS units.
        Used if the layout is positioned and the right facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>rightWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the inner start facet in valid CSS units.
        Used if the layout is positioned and the inner start facet is present and rendered and the inner left or right facet
        is not used instead. Defaults to 25%.
      </description>
         <property-name>innerStartWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the inner end facet in valid CSS units.
        Used if the layout is positioned and the inner end facet is present and rendered and the inner left or right facet
        is not used instead. Defaults to 25%.
      </description>
         <property-name>innerEndWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the inner left facet in valid CSS units.
        Used if the layout is positioned and the inner left facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>innerLeftWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Specifies the CSS width to give to the inner right facet in valid CSS units.
        Used if the layout is positioned and the inner right facet is present and rendered. Defaults to 25%.
      </description>
         <property-name>innerRightWidth</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>25%</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.BorderLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-event-name>click</fmd:default-event-name>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Component that displays a label for a form component.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreOutputLabel</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreOutputLabel</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreOutputLabel properties-->
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set.
              For accessibility reasons, this functionality is not supported in
              screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>valueAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the ID of the component that this component
refers to</description>
         <property-name>for</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Output</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Label</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>SingleStepButtonBar renders a Previous button,
         text describing the current step and the maximum steps, and a Next button.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSingleStepButtonBar</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreSingleStepButtonBar</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SingleStep properties-->
      <property>
         <description>the current step. The valid range is 1 to maxStep.
              It defaults to 1.</description>
         <property-name>selectedStep</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the last possible step. If this value is not known, 
              it should be set to
              MAX_VALUE_UNKNOWN (-1),
              which is also the default value. If maxStep is
              MAX_VALUE_UNKNOWN, then no text is rendered between the Back/Next
              buttons. When maxStep is 2 and selectedStep
              is 1, then only a Continue button is rendered.
      </description>
         <property-name>maxStep</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener 
             that will be called when the singleStep component navigates
             to the previous step.
      </description>
         <property-name>previousActionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener  
             that will be called when the singleStep component navigates
             to the next step.
      </description>
         <property-name>nextActionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a reference to an action method  
             that will be called when the singleStep component navigates
             to the next step, or the static outcome of the action.
      </description>
         <property-name>nextAction</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a reference to an action method  
             that will be called when the singleStep component navigates
             to the previous step, or the static outcome of the action.
      </description>
         <property-name>previousAction</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSingleStepButtonBar properties-->
      <property>
         <description>the text description of items being navigated.
            The default is "Step".</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SingleStep</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ButtonBar</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>selectedStep</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The showDetailItem represents a single item with specific
contents that can be selected by users to be shown in a showOne component.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreShowDetailItem</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CoreShowDetailItem</component-class><!--org.apache.myfaces.trinidad.CoreShowDetailItem facets-->
      <facet>
         <description>
        The content for the toolbar region of the detail item.
This facet will not be rendered as part of this component
but should, instead, be rendered by containers which support
toobars.
      </description>
         <facet-name>toolbar</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ShowDetail properties-->
      <property>
         <description>whether or not to disclose the children</description>
         <property-name>disclosed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>stops the local value of disclosed from being set
        by renderers. This allows the value to always be taken from the value of the disclosed
        value expression. Disclosed values must be updated in other ways (i.e. from a
        disclosure listener)</description>
         <property-name>disclosedTransient</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side - should be skipped when
          events are generated by this component.

          When immediate is false (the default), the disclosure event will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true, the disclosure
          event will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a disclosure listener</description>
         <property-name>disclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreShowDetailItem properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If value is "true", the component becomes non-interactive.
Otherwise,the default value is "false" and component assumes
its expected behavior.
      </description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        the textual label of the showDetailItem.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        An attribute that will simultaneously set both the "text"
and "accessKey" attributes from a single value, using
conventional ampersand ('&amp;amp;') notation.
&lt;p&gt;
  For example, setting this attribute to "T&amp;amp;amp;ext" will
  set the text to "Text" and the access key to 'e'.
&lt;/p&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        Character used to gain quick access to this showDetailItem.
For accessibility reasons, this functionality is not supported
in screen reader mode.
&lt;p&gt;
  If the same access key appears in multiple locations in the
  same page of output, the rendering user agent will cycle
  among the elements accessed by the similar keys.
&lt;/p&gt;
&lt;p&gt;
  This attribute is sometimes referred to as the "mnemonic".
&lt;/p&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        A non-negative integer that indicates the flexibility of this
component in its container.  If the container supports it, flex
is used to determine how space is distributed among its children.
Components with larger flex values will be made larger than
components with lower flex values.  This is done so at the ratio
determined by the flex of each of the two components.  The actual
value is only relevant if there are other flexible components
(components with flex values larger than zero) within the same
container.
      </description>
         <property-name>flex</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowDetail</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Item</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelChoice control creates, contains and shows a series of items defined by showDetailItem nodes.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelChoice</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelChoice</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelChoice properties-->
      <property>
         <description>the user-visible text of the item</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>position of the control elements. Defaults to
         "start", if not specified. Other value supported is"top".
      </description>
         <property-name>position</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>start</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>top start</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>alignment of the elements. Defaults to
         "center", if not specified. Other values are "start",
         "end", "top", and "bottom".
      </description>
         <property-name>alignment</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>center</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>top start end bottom center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Choice</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
        keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreShowDetailItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The goLink tag is an HTML link.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreGoLink</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreGoLink</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Go properties-->
      <property>
         <description>the URI this go component references</description>
         <property-name>destination</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreGoLink properties-->
      <property>
         <description>the textual label of the go component.   Go components will
             also render children elements (including text nodes), though not
             all subclasses of the go component will necessarily support
             children.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the go component should be considered disabled.
              This attribute only has meaning when go components are used in certain
              container types, such as global headers and tab bars.
      </description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this component.
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              &lt;p&gt;
              If the same access key appears in multiple input fields in the
              same page of output, the rendering user agent will cycle among
              the elements accessed by the similar keys. Note that user agents
              are inconsistent about dealing with two links having same access
              key, and so the cycling behavior is dependent on what the user agent
              provides.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;Text&lt;/code&gt; attribute of this go component instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>the target frame for the go component.</description>
         <property-name>targetFrame</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Go</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Link</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The Page component is similar to the PanelPage component, except that instead of having navigation1, navigation2, navigation3, and navigationGlobal facets for adding navigation item information, the user binds a model object and a stamp to render these areas.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/page.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CorePage</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CorePage</component-class><!--org.apache.myfaces.trinidad.Page facets-->
      <facet>
         <description>the component to use to stamp each element in the
              menu. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--org.apache.myfaces.trinidad.CorePage facets-->
      <facet>
         <description>This location typically contains a menuChoice.</description>
         <facet-name>menuSwitch</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
               <fmd:preferred-child-components/>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The context switcher of a page.</description>
         <facet-name>contextSwitcher</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The node to display messages. Usually contains a messages component.</description>
         <facet-name>messages</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreMessages</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The corporate or organization branding region of the page.  This section typically
                contains a medium size image of the logo of the organization
                owning the page.
      </description>
         <facet-name>branding</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreImage</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The application, module, or product branding region of the page.
                This section typically contains a image of the application logo.
      </description>
         <facet-name>brandingApp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreImage</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The application's contextual branding region of the page.
                This section typically
                contains formatted text indicating that ONE context exists
                between the persistent tabs. The user selects the context
                from a centralized aggregate home page of multiple contexts,
                then navigates into a tabbed application pertaining to that
                specific context.
      </description>
         <facet-name>brandingAppContextual</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The search region of the page.</description>
         <facet-name>search</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreInputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The locator region of the page.  If present, this section
                typically contains either a processTrain, indicating the user's
                location in a multistep process, or navigationPath, containing
                links that will bring the user back to each of the parent
                pages of a tree of pages that he has navigated down into.
      </description>
         <facet-name>location</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreTrain org.apache.myfaces.trinidad.CoreBreadCrumbs</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The page-level actions of the page.  If present, this area
                typically contains either a panelButtonBar containing buttons
                that operate on the entire page, or a processChoiceBar allowing
                the user to move to the next or previous step in a process.
                
      </description>
         <facet-name>actions</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelButtonBar org.apache.myfaces.trinidad.CoreProcessChoiceBar</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The copyright region of the page.  If present, this area
                typically contains a outputText with the copyright information.
      </description>
         <facet-name>appCopyright</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The privacy region of the page.  If present, this area
                typically contains a commandLink to the privacy policy for the
                application.
      </description>
         <facet-name>appPrivacy</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Area to put a commandLink to more information about the application.</description>
         <facet-name>appAbout</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This region provides a location for
                presenting additional information for the user. It often
                contains a panelBox.
      </description>
         <facet-name>infoSupplemental</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelBox</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The return information region. Typically this will contain a "return to [X]" link.
      </description>
         <facet-name>infoReturn</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The user information region.  This region provides a location for
                presenting user login and connection information.
      </description>
         <facet-name>infoUser</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The footnote information region.  This region provides a location for
                page-level information that is ancillary to the user's task.
      </description>
         <facet-name>infoFootnote</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The status information region. This region
                provides a location for page-level status that is important to
                the user's task. It also provides a location for a key notation.
                A key notation is a legend used to define icons, elements, or
                terms used within the page content.
      </description>
         <facet-name>infoStatus</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Page properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of menu data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation 
          should be skipped when row disclosure
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CorePage properties-->
      <property>
         <description>what the chromeType is for the page: compact or expanded. If
              compact, the productBranding will be shown alongside the
              corporate branding instead of below the corporate branding.
      </description>
         <property-name>chromeType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>compact</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>compact expanded</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Page</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Page</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Train is a UIXProcess component that renders a train.
          A train is a horizontal series of train stations connected by
          a horizontal line. Each train station
          is an image and text describing the page in the multi-page process.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/train.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreTrain</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreTrain</component-class><!--org.apache.myfaces.trinidad.Process facets-->
      <facet>
         <description>the component to use to stamp each element in the
              process. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Process properties-->
      <property>
         <description>the hierarchy of data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreTrain properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Process</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Train</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelHorizontalLayout control is a layout element that
arranges its children horizontally. The vertical and horizontal alignment
can be specified.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelHorizontalLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelHorizontalLayout</component-class><!--org.apache.myfaces.trinidad.CorePanelHorizontalLayout facets-->
      <facet>
         <description>Content to be rendered once between each of the
                other children.</description>
         <facet-name>separator</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelHorizontalLayout properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the vertical alignment to one of top, bottom, middle, or baseline.</description>
         <property-name>valign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>middle top baseline bottom</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the horizontal alignment to one of start, end, left,
right, or center.</description>
         <property-name>halign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>right start left end center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.HorizontalLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelTip tag provides a container for page or section level hints
to the user.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelTip</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelTip</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelTip properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Tip</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText org.apache.myfaces.trinidad.CoreOutputFormatted org.apache.myfaces.trinidad.CoreGoLink</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectBooleanCheckbox control is a standard browser input
          checkbox.  It supports displaying a prompt, text, and messages.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectBooleanCheckbox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectBooleanCheckbox</component-class><!--org.apache.myfaces.trinidad.CoreSelectBooleanCheckbox facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectBoolean properties-->
      <property>
         <description>whether or not the component is
              currently selected.  This is a typesafe alias for the "value"
              attribute. Note that "selected" and "value" attributes should not be used at the same time to avoid conflict.
      </description>
         <property-name>selected</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <alias-of>value</alias-of>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectBooleanCheckbox properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the text value of the checkbox.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this checkbox.
          For accessibility reasons, this functionality is not supported in
          screen reader mode.
          &lt;p&gt;
            If the same access key appears in multiple locations in the
            same page of output, the rendering user agent will cycle
            among the elements accessed by the similar keys.
          &lt;/p&gt;&lt;p&gt;
            This attribute is sometimes referred to as the "mnemonic".
          &lt;/p&gt;&lt;p&gt;
            The character specified by this attribute
            &lt;strong&gt;must&lt;/strong&gt;exist in the
            &lt;code&gt;text&lt;/code&gt;attribute of this selectBooleanCheckbox instance.
            If it does not, the user will receive no visual indication of
            the existence of the accessKey.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
          and "accessKey" attributes from a single value, using
          conventional ampersand ('&amp;amp;') notation.
          &lt;p&gt;
          For example, setting this attribute to "T&amp;amp;amp;ext" will
          set the text to "Text" and the access key to 'e'.
          &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectBoolean</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Checkbox</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The navigationPane component creates a series of navigation items representing one level in a navigation hierarchy.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreNavigationPane</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreNavigationPane</component-class><!--org.apache.myfaces.trinidad.NavigationLevel facets-->
      <facet>
         <description>the component to use to stamp each element in the
              navigation. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationLevel properties-->
      <property>
         <description>the hierarchy of navigation data - must be of type
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the level, based on a 0 based index, in the menuModel to render based on the focusPath of the menuModel.
      </description>
         <property-name>level</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreNavigationPane properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Whether the component is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;How the navigational items are displayed.  Options are:
              &lt;ul&gt;&lt;li&gt;bar
                &lt;/li&gt;&lt;li&gt;buttons
                &lt;/li&gt;&lt;li&gt;choice
                &lt;/li&gt;&lt;li&gt;list
                &lt;/li&gt;&lt;li&gt;tabs
                &lt;/li&gt;&lt;/ul&gt;
               &lt;/html&gt;</description>
         <property-name>hint</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>tabs bar buttons choice list</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Text that describes the items.  (This attribute is only applicable if the rendering hint supports it, e.g. "choice".)</description>
         <property-name>title</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationLevel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Pane</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The Trinidad Chart is used to diplay data in a chart format.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreChart</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreChart</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Chart properties-->
      <property>
         <description>the data model being used by this component.The specific model class must be derived from 
        &lt;code&gt;org.apache.myfaces.trinidad.model.ChartModel&lt;/code&gt;. 
        The derived class must override the abstract methods to provide the required values for chart display.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a drill down listener that
         will be called when the user drills down into the chart data.The method must take a parameter of type &lt;code&gt;org.apache.myfaces.trinidad.event.ChartDrillDownEvent&lt;/code&gt;.
      </description>
         <property-name>chartDrillDownListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreChart properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>The type of chart. Possible Values are: verticalBar horizontalBar stackedVerticalBar stackedHorizontalBar pie area stackedArea line barLine XYLine scatterPlot radar radarArea funnel circularGauge semiCircularGauge.</description>
         <property-name>type</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>verticalBar</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>verticalBar horizontalBar stackedVerticalBar stackedHorizontalBar pie area stackedArea line barLine XYLine scatterPlot radar radarArea funnel circularGauge semiCircularGauge</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies URI for the template document from which the chart elements are cloned.
        If this attribute is null, the chart component uses a default template. The default template is chosen based
        on whether the useGradient attribute is true or false.
        The template document is useful for changing the Look and Feel of the chart.
        Some examples include:1)A developer may want to skin the chart to match its corporate Look and Feel.
        2)A developer may want to put water marks/background images inside the chart.
        3)A developer may want to change the template for the gauges used in the gauge charts.
        4)A developer may want to turn off gradients and instead use filters to set some interesting effects on the chart elements.
        </description>
         <property-name>templateSource</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies if the chart is drawn with a perspective (2.5D).
      By default the chart is draw with a perspective.</description>
         <property-name>perspective</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specified the location of the legend. The legend can be turned off by setting this attribute to none.
      Otherwise it can be drawn at top, start, end or bottom.</description>
         <property-name>legendPosition</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>bottom</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>none bottom end top start</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The duration of the animation for the chart components in milliseconds.
      Animation can be turned off if the animationDuration is set to 0. The default value is 1000ms.</description>
         <property-name>animationDuration</property-name>
         <property-class>int</property-class>
         <default-value>1000</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>This attribute controls the number of horizontal major grid lines displayed in the chart.
      For horizontal charts(horizontalBar, stackedHorizontalBar) this attribute controls the horizontal major grid lines.
      The default is 3.</description>
         <property-name>YMajorGridLineCount</property-name>
         <property-class>int</property-class>
         <default-value>3</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>This attribute controls the number of minor grid lines displayed within a major grid section.
      The default value is -1, which means it varies per chart type. Currently it is used only for gauge charts
      with a default of 3.</description>
         <property-name>YMinorGridLineCount</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>This attribute controls the number of vertical major grid lines displayed in the chart.
      The default value is -1, which implies that the vertical major grid lines are controlled by the groupLabels
      in the chart model. This parameter along with the groupLabels provide flexibility in labeling the
      groups. For e.g. one can display a vertical bar chart with 2 years data. Only quarters may be labeled and XMajorGridLineCount can
      be 1 for splitting the data into two sections.</description>
         <property-name>XMajorGridLineCount</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The maximum precision of the numbers displayed on the yAxis(xAxis for horizontal charts).
      The default is 0.</description>
         <property-name>maxPrecision</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies if gradients are used to display chart elements.
      By default the chart elements use gradients.</description>
         <property-name>gradientsUsed</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies if tooltips are displayed or not.</description>
         <property-name>tooltipsVisible</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Chart</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Chart</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-property>id</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The icon component renders a skin specific icon.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/icon.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreIcon</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreIcon</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreIcon properties-->
      <property>
         <description>a  name identifying which icon should be rendered.
              Valid values depend on the skin-family. Shortcut names
              exist for ".AFRequiredIcon", ".AFWarningIcon",
              ".AFInfoIcon", and ".AFErrorIcon". They are "required",
              "warning", "info", and "error" respectively.
              See the Apache Trinidad skins documentation for a list of icon names.
      </description>
         <property-name>name</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>required</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Icon</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>name</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The statusIndicator component shows whether the page
               is busy processing or is ready. By default, the component
               shows predefined icons for both readyand busy state. However,
               if a facet is specified, be it rendered or not, none of the
               default icon is going to be rendered. That behavior enable an
               easy emulation of GMail behavior specifying only a busy
               facet.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreStatusIndicator</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreStatusIndicator</component-class><!--org.apache.myfaces.trinidad.CoreStatusIndicator facets-->
      <facet>
         <description>
        Content to be rendered when the page is ready. If this facet is
                 specified, no default icon is going to be rendered.</description>
         <facet-name>ready</facet-name>
      </facet>
      <facet>
         <description>
        Content to be rendered when the page is busy processing.
                 If this facet is specified, no default icon is going to
                 be rendered.</description>
         <facet-name>busy</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreStatusIndicator properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.StatusIndicator</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Component that is used as a child of the Table component. The Column
component defines the header, footer and data for a single column in the
Table.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/column.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreColumn</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreColumn</component-class><!--org.apache.myfaces.trinidad.Column facets-->
      <facet>
         <description>the node to use to render this column's header.</description>
         <facet-name>header</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the node to render as this column's footer.</description>
         <facet-name>footer</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Column properties-->
      <property>
         <description>The property that is displayed by this Column. This is the
            property that the framework might use to (for example) sort
            the Table's data.
      </description>
         <property-name>sortProperty</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreColumn properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The alignment for this column. The legal values are "start", "end" and "center", for left-justified, right-justified, and center-justified respectively in LTR display. The default value is "start".
      </description>
         <property-name>align</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>start</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>start end center left right</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The default sort order of the column. The legal values are "ascending" or "descending" for ascending sorting or descending sorting on a first click respectively. The default value is "ascending".
      </description>
         <property-name>defaultSortOrder</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>ascending</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>ascending descending</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the preferred width of this column, e.g., "30%", "100px".</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>text to display in the header of the column.  This is a convenience that generates output equivalent to adding a "header" facet containing an outputText.
      </description>
         <property-name>headerText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether or not the column contents should be allowed to wrap
      </description>
         <property-name>noWrap</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether or not the column header
should be allowed to wrap</description>
         <property-name>headerNoWrap</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;whether or not the column is sortable. A sortable column has a clickable header that (when clicked) sorts the table by that column's property. Note that in order for a column to be sortable, this attribute must be set to "true" and the underlying model must support sorting by this column's property. &lt;p&gt; This column's "sortProperty" attribute must be set if sorting is desired.&lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>sortable</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether or not the children of this column should be rendered on separate rows. Setting this attribute to true will cause each child to render in its own row. Setting this to false will cause all the children to be rendered in one cell, which will rowSpan across the rows of the Columns whose children are rendered on separate rows.
      </description>
         <property-name>separateRows</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Whether or not this column is a row header column.</description>
         <property-name>rowHeader</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Column</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Column</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>headerText</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-corecolumn-holder</fmd:required-ancestor-contracts>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-corecolumn-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>spacers occupy a fixed amount of
          space in a layout.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/spacer.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreSpacer</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreSpacer</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSpacer properties-->
      <property>
         <description>the width of the spacer item.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>10</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the height of the spacer item.</description>
         <property-name>height</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>10</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Spacer</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputColor control creates a text field for entering colors and
          a button for picking colors from a palette.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputColor</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputColor</component-class><!--org.apache.myfaces.trinidad.CoreInputColor facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectInput properties-->
      <property>
         <description>a reference to an action method sent by the commandButton, or the static outcome of an action</description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an return listener</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputColor properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If true, attempt to use less screen real-estate to display the
          inputColor.  For example, this
          might cause the text area not to be rendered, and the color
          swatch conveys the currently selected color.
      </description>
         <property-name>compact</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>The id of the inline chooseColor component which can be used to
          update the Color value for this inputColor. Use the same syntax as partialTriggers
          if the components are separated by Naming Containers.
      </description>
         <property-name>chooseId</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the number of columns to display in the text
          control. If no value is specified, a default
          value will be derived from the current converter, if one
   is attached.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectInput</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Color</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The Trinidad TreeTable is used to display data that is structured in a hierarchical format.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreTreeTable</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreTreeTable</component-class><!--org.apache.myfaces.trinidad.Tree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported, 
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.  In a treeTable, this must be a column.
      </description>
         <facet-name>nodeStamp</facet-name>
      </facet><!--org.apache.myfaces.trinidad.CoreTreeTable facets-->
      <facet>
         <description>the component used to render the table footer.</description>
         <facet-name>footer</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the component used to render the table header.</description>
         <facet-name>header</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>content to be rendered inline with the navigation bar.
      </description>
         <facet-name>actions</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the component used to stamp each step of the focus path of this
                  treeTable.
      </description>
         <facet-name>pathStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Tree properties-->
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
          Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type 
        org.apache.myfaces.trinidad.model.TreeModel</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the rowKey of the currently focused row.
        The rowKeys of the ancestor rows of the focus row are added
        to the expandedRowKeys RowKeySet by default.
      </description>
         <property-name>focusRowKey</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a focus listener</description>
         <property-name>focusListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If upon initial rendering, the current subtree under the focused row path
        should be expanded. A RowDisclosureEvent is broadcast from the encode begin of the 
        component so that listeners are properly notified of the disclosure.
      </description>
         <property-name>initiallyExpanded</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.TreeTable properties-->
      <property>
         <description>
        
          If the root node should be rendered or not. Defaults to true.
        
      </description>
         <property-name>rootNodeRendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of records that can be displayed at
              one time (range size).
              Each level of depth in the tree can have a different range size.
              The first number in the array sets the range size for the root
              collection. Each subsequent number sets the range size for the
              corresponding depth. The last number becomes the default for
              each subsequent level of depth.

              If a node has more children than
              the range size, navigation rows will be rendered above and
              below the child nodes.
      </description>
         <property-name>rowsByDepth</property-name>
         <property-class>int[]</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreTreeTable properties-->
      <property>
         <description>if the horizontal grid lines will be drawn.</description>
         <property-name>horizontalGridVisible</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>if the vertical grid lines will be drawn.</description>
         <property-name>verticalGridVisible</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>text displayed when a table is empty.</description>
         <property-name>emptyText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the interval between which the column banding alternates.  For example, a columnBandingInterval of 1 would display alternately banded columns.
      </description>
         <property-name>columnBandingInterval</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the interval between which the row banding alternates.  For example, rowBandingInterval=1 would displayalternately banded rows in the Grid.
      </description>
         <property-name>rowBandingInterval</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether rows in this table selectable. Valid values are "none", "single", "multiple"</description>
         <property-name>rowSelection</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>none single multiple</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).  This only takes effect if rowSelection attribute enabled.
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the width of the table.  The value must either be a number of pixels or a percentage - it is not a CSS width.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the summary of this table's purpose and structure
         for user agents rendering to non-visual media.
      </description>
         <property-name>summary</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Whether the Expand All, Collapse All links should be rendered.</description>
         <property-name>expandAllEnabled</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.TreeTable</component-family>
         <renderer-type>org.apache.myfaces.trinidad.TreeTable</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreColumn</fmd:preferred-child-components>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-corecolumn-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectItem tag represents a single item that the user
may select from a list, choice, radio, or shuttle Trinidad control.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectItem</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectItem</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectItem properties-->
      <property>
         <description>the value used to identify this item when the
              parent control is submitted to the server.  If no value is specified
              for a particular item, the item's contents will be used as its
              value.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectItem properties-->
      <property>
         <description>the user-visible text of the item</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the item is disabled.  By default, no
          items are disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the description associated with this option.
        This is used in selectManyShuttle and selectOrderShuttle, and ignored otherwise.
      </description>
         <property-name>longDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>The short description of the bean.  This text
         is commonly used by user agents to display advisory information about the option.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectItem</component-family>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelList control outputs each visible child
          in a list with a bullet next to it.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelList</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelList</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelList properties-->
      <property>
         <description>Styles the list. For example, you can style the list to be squares like this:
      listStyle='list-style-type:square' </description>
         <property-name>listStyle</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>Sets
                  the number of rows after which to start a new column.
                  This attribute defaults to Integer.MAX_VALUE.
                  The number of rows actually rendered depends also on the
                  "maxColumns" attribute.
                  If the children will not fit in the given number
                  of rows and columns, the number of rows will
                  increase to accomodate the children.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>2147483647</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Sets
                  the maximum number of columns to show.
                  This attribute defaults to 3 and defaults to 2 for PDA's
      </description>
         <property-name>maxColumns</property-name>
         <property-class>int</property-class>
         <default-value>3</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.List</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>rows</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The chooseDate component is used in conjunction with a
          selectInputDate to allow the user to quickly select a date value without
          having to navigate to a secondary window.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreChooseDate</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreChooseDate</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreChooseDate properties-->
      <property>
         <description>The minimum value allowed for the Date value.
When set to a fixed value on a tag, this will be parsed as an ISO 8601 date.
ISO 8601 dates are of the form "yyyy-MM-dd"
(for example: 2002-02-15).  All other uses require java.util.Date objects.
When binding to Date objects, it is advised to create the Date object with zeroed-out
values for any date-time components that aren't displayed (usually hours, minutes, seconds, milliseconds)
to allow the largest range of values to be accepted.
      </description>
         <property-name>minValue</property-name>
         <property-class>java.util.Date</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
  The maximum value allowed for the Date value.
When set to a fixed value on a tag, this will be parsed as an ISO 8601 date.
ISO 8601 dates are of the form "yyyy-MM-dd"
(for example: 2002-02-15).  All other uses require java.util.Date objects.
When binding to Date objects, it is advised to create the Date object with
maximum value for any date-time components that aren't displayed (usually hours, minutes, seconds, milliseconds)
to allow the largest range of values to be accepted.
      </description>
         <property-name>maxValue</property-name>
         <property-class>java.util.Date</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Choose</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Date</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>ProcessChoiceBar is a UIXProcess component that renders a previous
          button, a choice bar, and a next button.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreProcessChoiceBar</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreProcessChoiceBar</component-class><!--org.apache.myfaces.trinidad.Process facets-->
      <facet>
         <description>the component to use to stamp each element in the
              process. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Process properties-->
      <property>
         <description>the hierarchy of data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreProcessChoiceBar properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Process</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ChoiceBar</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputHidden tag adds a value that
          will be submitted with a page, but not displayed
          to the user.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputHidden</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputHidden</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Input</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Hidden</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelSideBar control renders a side navigation bar.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelSideBar</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelSideBar</component-class><!--org.apache.myfaces.trinidad.CorePanelSideBar facets-->
      <facet>
         <description>rendered above the children of the
                panelSideBar.</description>
         <facet-name>filter</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelSideBar properties-->
      <property>
         <description>the width of the panelSideBar in pixels or as a percentage.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.SideBar</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components/>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The media component displays media content, such as audio, video,
          or image in a player embedded in the user agent.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/media.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreMedia</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreMedia</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreMedia properties-->
      <property>
         <description>&lt;html&gt; width in pixels to reserve for the media player plus its content.
            As the extra width needed for the media player controls can vary
            from media player to media player and depend on the controls
            displayed in the media player, it is recommended that the
            "innerWidth" attribute be used in preference to this attribute.
            &lt;p&gt;
            If both the "width" and "innerWidth" attributes are specified,
            the "width" attribute will be used.
            &lt;/p&gt;
            &lt;p&gt;
            If no width is specified, the width of the media control is
            determined by calculating the "innerWidth" and adding any extra
            width necessary to display the media player controls.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; height in pixels to reserve for the media player plus its content.
            As the extra height needed for the media player controls can vary
            from media player to media player and depend on the controls
            displayed in the media player, it is recommended that the
            "innerHeight" attribute be used in preference to this attribute.
            &lt;p&gt;
            If both the "height" and "innerHeight" attributes are specified,
            the "height" attribute will be used.
            &lt;/p&gt;
            &lt;p&gt;
            If no height is specified, the height of the media control is
            determined by calculating the "innerHeight" and adding any extra
            height necessary to display the media player controls.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>height</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; width in pixels to reserve for the media player content.  This
            will typically be set to the pixel width of the media resource
            to display.
            &lt;p&gt;
            If no "innerWidth" is specified, the "innerWidth" will be defaulted
            based on the content type of the media resource to play.
            &lt;/p&gt;
            &lt;p&gt;
            If both the "width" and "innerWidth" attributes are specified,
            the "width" attribute will be used.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>innerWidth</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>&lt;html&gt; height in pixels to reserve for the media player content.  This
            will typically be set to the pixel height of the media resource
            to display.
            &lt;p&gt;
            If no "innerHeight" is specified, the "innerHeight" will be defaulted
            based on the content type of the media resource to play.
            &lt;/p&gt;
            &lt;p&gt;
            If both the "height" and "innerHeight" attributes are specified,
            the "height" attribute will be used.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>innerHeight</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the URI specifying the location of the media resource.  If no
            contentType is specified, the contentType will be inferred from
            the extension of the source attribute.
      </description>
         <property-name>source</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the media resource loads
            and plays automatically without user initiation.  When set to "true",
            the media resource will load and play as soon as possible.
      </description>
         <property-name>autostart</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the number of times the media resource will play.  If set to "0",
            the resource will loop until the user stops the playing.
      </description>
         <property-name>playCount</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the MIME type of the media content returned by the "source" URI.
            This attribute is used as a hint when determining which player to
            pick, how the controls of the player are to be configured, and
            the default size of the media player.  If it isn't specified, an
            attempt will be made to derive this information from the extension
            of the source URI.
      </description>
         <property-name>contentType</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>Message to display in the media player while the media resource
              is loading.
      </description>
         <property-name>standbyText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; which media player to use to play the media resource. If possible,
              the media control will accomodate this request.  However, if
              the requested player is not available on the user agent, or does
              not support playing the media resource, an alternate player
              will be used instead.  In all cases, the "link" player is used
              as a fallback if no other player is available, or the requested
              player fails for some reason.
              &lt;ul&gt;
                &lt;li&gt;
                  &lt;code&gt;"none"&lt;/code&gt;
                  &lt;p&gt;
                   use a link in the user agent page to launch the playing of the
                   media resource.
                  &lt;/p&gt;
                  &lt;p&gt;
                   This player setting uses the least amount of space on the page
                   and uses the user agent's built in content type mapping
                   to determine how to display the media resource.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"quicktime"&lt;/code&gt;
                  &lt;p&gt;
                   use the Apple QuickTime player.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"windows"&lt;/code&gt;
                  &lt;p&gt;
                   use the Windows Media Player.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"real"&lt;/code&gt;
                  &lt;p&gt;
                   use the Real Player.
                  &lt;/p&gt;
                &lt;/li&gt;
              &lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>player</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>windows quicktime link real</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the set of controls made available to the user for controlling
              the media playback.  The actual set of controls displayed for the
              same value may differ between players.  Likewise, the amount of
              space occupied by the controls will differ from media player to
              media player.  This can cause problems if the size of the
              media control has been specified by the "width" and "height"
              attributes rather than "innerWidth" and "innerHeight".
              &lt;ul&gt;
                &lt;li&gt;
                  &lt;code&gt;"none"&lt;/code&gt;
                  &lt;p&gt;
                   don't show any controls for the media player and don't allow
                   control access through alternate means, such as context menus.
                  &lt;/p&gt;
                  &lt;p&gt;
                   This value is typically only used in kiosk-type applications
                   where no user control over the playing of the media is allowed.
                   It is typically used in conjunction with setting the
                   "autostart" attribute to "true", and the "playCount" attribute
                   to "0" to cause the media play immediately and then loop.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"noneVisible"&lt;/code&gt;
                  &lt;p&gt;
                   don't show any controls for the media player but allow control
                   access through alternate means, such as context menus.
                  &lt;/p&gt;
                  &lt;p&gt;
                   This value is typically only used in applications where user
                   control over the playing of the media is allowed, but
                   not encouraged.  It is typically used in conjunction with
                   setting the "autostart" attribute to "true", and the
                   "playCount" attribute to "0" to cause the media to play
                   immediately and then loop.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"minimal"&lt;/code&gt;
                  &lt;p&gt;
                    show a minimal set of controls for playing media on the media
                    player.
                  &lt;/p&gt;
                  &lt;p&gt;
                   This value gives users control over the most
                   important media playing controls, while occupying the least
                   amount of additional space on the user agent.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"typical"&lt;/code&gt;
                  &lt;p&gt;
                   show the typical set of controls for playing media on the
                   media player.
                  &lt;/p&gt;
                  &lt;p&gt;
                   This value, the default, gives users control over the most
                   common media playing controls, without occupying an inordinate
                   amount of extra space on the user agent.
                  &lt;/p&gt;
                &lt;/li&gt;
                &lt;li&gt;
                  &lt;code&gt;"all"&lt;/code&gt;
                  &lt;p&gt;
                   Show all available controls for playing media on the media player
                  &lt;/p&gt;
                  &lt;p&gt;
                   Using this setting can cause large amount of additional space
                   to be required, depending on the media player used.
                  &lt;/p&gt;
                &lt;/li&gt;
              &lt;/ul&gt;
              &lt;p&gt;
                The default of this attribute is &lt;code&gt;"typical"&lt;/code&gt;.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>controls</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>typical</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>noneVisible none typical all minimal</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Media</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>source</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelAccordion control creates, contains and shows a series of items defined by showDetailItem nodes.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelAccordion</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelAccordion</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelAccordion properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Indicates whether a minimum of one detail item must be
disclosed at a time.  Use "false" (the default) to keep a minimum of one
detail item disclosed at all times.  Use "true" to make it possible for
all items to be collapsed.
      </description>
         <property-name>discloseNone</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>Indicates whether more than one detail item may be
disclosed at a time.  Use "false" (the default) to keep a maximum of
one detail item disclosed at all times.  Use "true" to make it
possible for multiple detail items to be disclosed.
      </description>
         <property-name>discloseMany</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Accordion</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreShowDetailItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The panelBox is used to place ancillary information on a page,
offset by a certain color.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelBox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelBox</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelBox properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        The header of the content container.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        the appearance type of the content container. It should be one of "light",
"medium", "dark", or "transparent"
      </description>
         <property-name>background</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>light</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>light medium dark transparent</fmd:property-values>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        An URL to an image to use for the icon of
the content container.
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        The inline style of the content region.
      </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Box</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The commandLink control creates a link representation of a UIXCommand.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreCommandLink</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreCommandLink</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Command properties-->
      <property>
         <description>a reference to an action method sent by the command component,
              or the static outcome of an action. If the action starts with "dialog:",
              useWindow attribute must be set to true.
      </description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a return listener.This method
      is used to process dialog returnEvents which are generated as a result of either
      calling org.apache.myfaces.trinidad.context.RequestContext.returnFromDialog
      directly or declaratively through the use of a returnActionListener tag.</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a launch listener</description>
         <property-name>launchListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreCommandLink properties-->
      <property>
         <description>the textual label of the link.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the link should be considered disabled.
              This attribute only has meaning when links are used in certain
              container types, such as global headers and tab bars.
      </description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this link.
              For accessibility reasons, this functionality is not
              supported in screen reader mode.
              &lt;p&gt;
              If the same access key appears in multiple input fields in the
              same page of output, the rendering user agent will cycle among
              the elements accessed by the similar keys. Note that user agents
              are inconsistent about dealing with two links having same access
              key, and so the cycling behavior is dependent on what the user agent
              provides.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;Text&lt;/code&gt; attribute of this Link instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>whether the action should be done through a partial page submit
            or not.
            Default is false: no partial page submit.
      </description>
         <property-name>partialSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE the component will start blocking user input when the
     action is initiated. The blocking will stop when a response is received
     from the server.
      </description>
         <property-name>blocking</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Indicates whether processes launched by this command should be
        launched in a secondary dialog window. 'useWindow' requires that the "action"
        attribute start with "dialog:". Set useWindow to 'false' for the outcome of
        the action to be targeted to the existing window.</description>
         <property-name>useWindow</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Height of the window, if this command is used to launch a window.</description>
         <property-name>windowHeight</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Width of the window, if this command is used to launch a window.</description>
         <property-name>windowWidth</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Command</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Link</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>action click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup blur focus</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The outputDocument component supports styled text with line breaks.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreOutputDocument</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreOutputDocument</component-class><!--org.apache.myfaces.trinidad.CoreOutputDocument facets-->
      <facet>
         <description>The title of the document.
      </description>
         <facet-name>title</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The object used to separate paragraphs of the document.
      </description>
         <facet-name>separator</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreImage org.apache.myfaces.trinidad.CoreSeparator</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreOutputDocument properties-->
      <property>
         <description>the style class of the title. This property will be
         considered only if a title facet is used.
      </description>
         <property-name>titleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the style class of the separator. This property will be
         considered only if a separator facet is used.
      </description>
         <property-name>separatorClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Output</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Document</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Represents an interactive tree component.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/tree.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreTree</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreTree</component-class><!--org.apache.myfaces.trinidad.Tree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported, 
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.  In a treeTable, this must be a column.
      </description>
         <facet-name>nodeStamp</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Tree properties-->
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
          Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type 
        org.apache.myfaces.trinidad.model.TreeModel</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the rowKey of the currently focused row.
        The rowKeys of the ancestor rows of the focus row are added
        to the expandedRowKeys RowKeySet by default.
      </description>
         <property-name>focusRowKey</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a focus listener</description>
         <property-name>focusListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If upon initial rendering, the current subtree under the focused row path
        should be expanded. A RowDisclosureEvent is broadcast from the encode begin of the 
        component so that listeners are properly notified of the disclosure.
      </description>
         <property-name>initiallyExpanded</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreTree properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Tree</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Tree</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The showDetail provides a means of toggling a group of components between being
hidden or shown.  If the "prompt" facet is present, the component in the facet
will be put next to the disclosure icon.  If the prompt facet is not present
but either the disclosedText or the undisclosedText attributes are set, then
the text in that attribute will be displayed next to the disclosure icon.
If the prompt facet is not set but both the disclosedText and undisclosedText
attributes are set then the disclosedText will be displayed when disclosed="true"
and undisclosedText will be displayed when disclosed="false".  If the prompt
facet is not set and neither the disclosedText or undisclosedText attributes are
set, then the label will default to "Hide" for the disclosed text and "Show" for
the undisclosed text.  For the purposes of EL, setting disclosedText or
undisclosedText to null is the same as not setting the value.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreShowDetail</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CoreShowDetail</component-class><!--org.apache.myfaces.trinidad.CoreShowDetail facets-->
      <facet>
         <description>
        Component rendered next to the hide or show icon.  If this facet is present, this
will be used instead of the disclosedText and undisclosedText attributes.
      </description>
         <facet-name>prompt</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreGoLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <required>false</required>
               <unsupported-agents>phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ShowDetail properties-->
      <property>
         <description>whether or not to disclose the children</description>
         <property-name>disclosed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>stops the local value of disclosed from being set
        by renderers. This allows the value to always be taken from the value of the disclosed
        value expression. Disclosed values must be updated in other ways (i.e. from a
        disclosure listener)</description>
         <property-name>disclosedTransient</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side - should be skipped when
          events are generated by this component.

          When immediate is false (the default), the disclosure event will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true, the disclosure
          event will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a disclosure listener</description>
         <property-name>disclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreShowDetail properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        the text to display when the children are disclosed.  If this attribute is set
and the undisclosedText attribute is not set, this text will be displayed for
both the disclosed state AND the undisclosed state.
      </description>
         <property-name>disclosedText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        the text to display when the children are undisclosed.  If this attribute is set
and the disclosedText attribute is not set, this text will be displayed for
both the disclosed state AND the undisclosed state.
      </description>
         <property-name>undisclosedText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowDetail</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ShowDetail</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputFile component is a component that can
          be used to upload a file.  It supports displaying a label,
          text, and messages.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputFile</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputFile</component-class><!--org.apache.myfaces.trinidad.CoreInputFile facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputFile properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>event handler for when the value is changed.
        </description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when text becomes selected.</description>
         <property-name>onselect</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The size of the text control specified by the number of characters shown.The default value depends on the browser.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;An attribute that will simultaneously set both the "label"and "accessKey" attributes from a single value, usingconventional ampersand notation. For example, setting this attribute to "T&amp;amp;ext" willset the label to "Text" and the access key to 'e'.&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; For accessibility reasons, this functionality is not supported in screen reader mode. If the same access key appears in multiple locations in the same page of output, the rendering user agent will cycle among the elements accessed by the similar keys. &lt;p&gt; This attribute is sometimes referred to as the "mnemonic". &lt;/p&gt;&lt;/html&gt;
        </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Input</component-family>
         <renderer-type>org.apache.myfaces.trinidad.File</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur select valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectOrderShuttle component provides a mechanism for selecting
   multiple values from a list of values by allowing the user to move
   items between two lists, and reordering that list of values.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectOrderShuttle</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectOrderShuttle</component-class><!--org.apache.myfaces.trinidad.CoreSelectOrderShuttle facets-->
      <facet>
         <description>the filter above the leading list.</description>
         <facet-name>filter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectOneChoice</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the footer of buttons/images under the leading list.</description>
         <facet-name>leadingFooter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the footer of buttons/images under the trailing list.</description>
         <facet-name>trailingFooter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectOrderShuttle properties-->
      <property>
         <description>whether the shuttle is in "reorder only" mode, where the user can reorder the list of values, but cannot add or remove them.
      </description>
         <property-name>reorderOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the display size(number of items) of the lists. The size
              specified must be between 10 and 20 items. If the attribute is not
              set or has a value less than 10, the size would have a default or
              minimum value of 10. If the attribute value specified is more than
              20 items, the size would have the maximum value of 20.
      </description>
         <property-name>size</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the header of the leading list of the shuttle.</description>
         <property-name>leadingHeader</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the header of the trailing list of the shuttle.</description>
         <property-name>trailingHeader</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether or not the leading list has an area to display descriptions.</description>
         <property-name>leadingDescShown</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether or not the trailing list has an area to display descriptions.</description>
         <property-name>trailingDescShown</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label for the shuttle that is used to identify the component only when displaying error messages. The label specified does not otherwise appear on the page.
      </description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOrder</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Shuttle</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The panelPopup is used to place ancillary information on a page,
made visible via a clickable link.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelPopup</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelPopup</component-class><!--org.apache.myfaces.trinidad.CorePanelPopup facets-->
      <facet>
         <description>Content to be rendered as a link to launch the popup panel. Use this facet
        to define an icon or other content types to launch the popup. If this facet  is not defined, then
        the 'text' attribute must be specified.
      </description>
         <facet-name>trigger</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelPopup properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Defines the launch behaviour of the popup.  If set to 'click' the popup will
        appear when the trigger is clicked, and disappear when you click off the popup.  The 'hover' value
        will cause the popup to appear while the mouse is over the trigger, and disappear when the mouse
        leaves either the trigger or the popup panel.
      </description>
         <property-name>triggerType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>click</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>click hover</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The icon to render as a link to launch the popup panel.  If the 'trigger'
        facet is defined, then this attribute is ignored.  If the 'text' attribute is also specified,
        then the icon and text will both be rendered.
        
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The text to render as a link to launch the popup panel.  If the 'trigger'
        facet is defined, then this attribute is ignored.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The title of the panel when visible.  The titlebar is not rendered if this attribute
        is not specified.
      </description>
         <property-name>title</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The display mode of the panel.  Defaults to "false" (non-modal).
        Non-Modal panels will close when the user clicks off the panel. Modal popups are
        rendered with a titlebar and close icon.  Clicking the close icon will close the
        modal popup.
      </description>
         <property-name>modal</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The position of the content container when visible. Defaults to
         "relative" if not specified. Other values are "centered" (centered on screen).
      </description>
         <property-name>position</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>relative</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>relative centered</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The popup's horizontal offset in pixels from the current mouse position.
        This property only applies to popups using relative positioning.
      </description>
         <property-name>xoffset</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The popup's vertical offset in pixels from the current mouse position.
        This property only applies to popups using relative positioning.
      </description>
         <property-name>yoffset</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        The inline style of the content region.
      </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>
        Set the width of the popup.  If not present the width defaults to the width of the content.
      </description>
         <property-name>width</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Set the height of the popup.  If not present the width defaults to the height of the content.
      </description>
         <property-name>height</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Popup</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The commandButton control creates a button representation of a UIXCommand.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreCommandButton</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreCommandButton</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Command properties-->
      <property>
         <description>a reference to an action method sent by the command component,
              or the static outcome of an action. If the action starts with "dialog:",
              useWindow attribute must be set to true.
      </description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a return listener.This method
      is used to process dialog returnEvents which are generated as a result of either
      calling org.apache.myfaces.trinidad.context.RequestContext.returnFromDialog
      directly or declaratively through the use of a returnActionListener tag.</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a launch listener</description>
         <property-name>launchListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreCommandButton properties-->
      <property>
         <description>the textual label of the button.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the button should be disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this button.
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              &lt;p&gt;
              If the same access key appears in multiple input fields in the
              same page of output, the rendering user agent will cycle among
              the elements accessed by the similar keys. Note that user agents
              are inconsistent about dealing with two links having same access
              key, and so the cycling behavior is dependent on what the user agent
              provides.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;Text&lt;/code&gt; attribute of this button instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                The easiest, and most convenient
                way to specify both the text and the mnemonic together is
                to use textAndAccessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>whether the action should be done through a partial page submit
            or not.
            Default is false: no partial page submit.
      </description>
         <property-name>partialSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE the component will start blocking user input when the
     action is initiated. The blocking will stop when a response is received
     from the server.
      </description>
         <property-name>blocking</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>
        An URL to an image to use for an icon displayed in the button.
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Indicates whether processes launched by this command should be
        launched in a secondary dialog window. 'useWindow' requires that the "action"
        attribute start with "dialog:". Set useWindow to 'false' for the outcome of
        the action to be targeted to the existing window.</description>
         <property-name>useWindow</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Height of the window, if this command is used to launch a window.</description>
         <property-name>windowHeight</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Width of the window, if this command is used to launch a window.</description>
         <property-name>windowWidth</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Command</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Button</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>action click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The styleSheet tag generates the style
          sheet link reference to a generated Apache Trinidad style sheet.
          This is automatically included for you if you use the Trinidad head tag.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/styleSheet.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreStyleSheet</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CoreStyleSheet</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.StyleSheet</component-family>
         <renderer-type>org.apache.myfaces.trinidad.StyleSheet</renderer-type>
         <component-metadata>
            <unsupported-agents>phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:hidden>true</fmd:hidden>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>SelectRangeChoiceBar is used to allow the user to select a range of
          records to display among a larger set of records.
          It allows the user to move back and forth through these records
          through a choice and buttons.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectRangeChoiceBar</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreSelectRangeChoiceBar</component-class><!--org.apache.myfaces.trinidad.SelectRange facets-->
      <facet>
         <description>use to customize the label of each range selection.</description>
         <facet-name>rangeLabel</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectRange properties-->
      <property>
         <description>the name of the EL variable that provides access to the "start"
              and "end" variables that point to the start and end row in
              the each range from the data model. This can be used to customize
              the range text.
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation 
          should be skipped when range change
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the data model being used by this component.
The specific model class is
        &lt;code&gt;org.apache.myfaces.trinidad.model.CollectionModel&lt;/code&gt;.

        You may also use other model instances, e.g.,  
        &lt;code&gt;java.util.List&lt;/code&gt;  ,
        array, and  &lt;code&gt;javax.faces.model.DataModel&lt;/code&gt;.
        This component will automatically convert the instance
        into a &lt;code&gt;CollectionModel&lt;/code&gt;.&lt;/html&gt;
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of rows to display in a single range of rows.
Some ranges might have fewer
than the number of rows specified by this attribute (eg: the last range
might have an insufficient number of rows).
To display all rows at once, set this attribute to 0.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>25</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the index of the first row in the currently range of rows.
This index is zero-based. This attribute is used to control
which range of rows to display to the user.
      </description>
         <property-name>first</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreSelectRangeChoiceBar properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the "Show All" option is selected. The "Show All" option
        is available if there are less than 30 options and the row count in
        the data model is known.
      </description>
         <property-name>showAll</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectRange</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ChoiceBar</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The image control creates an image tag.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/image.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreImage</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreImage</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreImage properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        the URI specifying the location of the image resource.
      </description>
         <property-name>source</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        an URL that specifies a link to a long description of the image.
This description should supplement the short description.
      </description>
         <property-name>longDescURL</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If a server-side image map is desired, specify "server" and place
              inside a CoreGoLink component.  The acceptable values
              are "server" or "none"; defaults to "none".
      </description>
         <property-name>imageMapType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>none server</fmd:property-values>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Image</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>source</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelFormLayout lays out input form controls, such that their labels and fields line up vertically.  The children of this component are input controls, they are inputText, inputHidden, inputFile, inputColor, inputListOfValues, inputDate, selectBooleanCheckBox, selectBooleanRadio, selectOneChoice, selectOneListBox, selectOneRadio, selectManyListBox and panelLabelAndMessage.  These components must have their "simple" attribute set to false (the default).  For cases where other controls are required inside panelFormLayout, wrap them in a panelLabelAndMessage.

This component can be used to lay out multiple columns using the rows attribute.  The children are laid out down and then across.  Note that this layout is not a table layout so there is no overall table row.  Instead, rows are unique per column; in one column a row may consume more vertical space than a nearby row in another column.

The panelFormLayout is an example of one of the components that has support for grouping its children components.
If you place panelFormLayout child items inside of a group, separators will be drawn around the group of form items if adjacent to other form items (separators won't be drawn at the top if the group is the first item in the column or, similarly, at the bottom if the group is the last item in the column).
Grouped panelFormLayout items are kept in the same column of the panelFormLayout even when the assigned rows attribute is set to a value smaller than the number of items in the group.
The panelFormLayout component also supports the group component in its footer facet so you can place more than one item in the footer.  You can even group footer items one additional time to get separators to appear.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelFormLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelFormLayout</component-class><!--org.apache.myfaces.trinidad.CorePanelFormLayout facets-->
      <facet>
         <description>This facet is rendered under the columns and usually contains a panelButtonBar.
             &lt;p&gt;
This facet may not always line up perfectly, especially if the labels or fields are longer than expected.  Try adjusting things with the labelWidth and fieldWidth attributes when necessary.  Also, the columns attribute on inputText may be helpful.
             &lt;/p&gt;
      </description>
         <facet-name>footer</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelButtonBar</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelFormLayout properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The preferred width of the field.  Usually a percentage, but may be specified as either a percentage or an absolute number of pixels.  If the width is not specified, it will default appropriately.  If specified as a percentage the labelWidth plus the fieldWidth should add up to 100%, regardless of the number of columns.  If the fieldWidth is specified and is a percentage the labelWidth will be derived appropriately if not specified.</description>
         <property-name>fieldWidth</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>The preferred width of the label.  Usually a percentage, but may be specified as either a percentage or an absolute number of pixels.  If the width is not specified, it will default appropriately.  If specified as a percentage the labelWidth plus the fieldWidth should add up to 100%, regardless of the number of columns.  If the labelWidth is specified and is a percentage the fieldWidth will be derived appropriately if not specified.</description>
         <property-name>labelWidth</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Sets the maximum number of columns to show.  This attribute defaults to 3 and 2 on PDAs.  If this panelFormLayout is inside of another panelFormLayout, this will always be 1.</description>
         <property-name>maxColumns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Sets the number of rows after which to start a new column.  This attribute defaults to Integer.MAX_VALUE.  The number of rows actually rendered depends also on the "maxColumns" property.  If the children will not fit in the given number of rows and columns, the number of rows will increase to accomodate the children.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>The alignment of label prompts for the form items.
      </description>
         <property-name>labelAlignment</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>start top</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.FormLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreInputText org.apache.myfaces.trinidad.CoreInputFile org.apache.myfaces.trinidad.CoreSelectBooleanCheckbox org.apache.myfaces.trinidad.CoreSelectBooleanRadio org.apache.myfaces.trinidad.CoreInputColor org.apache.myfaces.trinidad.CoreInputDate org.apache.myfaces.trinidad.CoreInputListOfValues org.apache.myfaces.trinidad.CoreSelectManyListbox org.apache.myfaces.trinidad.CoreSelectOneChoice org.apache.myfaces.trinidad.CoreSelectOneRadio org.apache.myfaces.trinidad.CorePanelLabelAndMessage org.apache.myfaces.trinidad.CoreSelectManyCheckbox</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Component that displays a message on behalf of a component.
Trinidad input components typically support automatically showing
their own messages, so this tag should be used only when
setting the "simple" attribute to true.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreMessage</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreMessage</component-class><!--org.apache.myfaces.trinidad.CoreMessage facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Message properties-->
      <property>
         <description>the relative ID from this component to the component whose messages will be displayed</description>
         <property-name>for</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreMessage properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the error, warning, or informational text.</description>
         <property-name>message</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the type of the message; acceptable values
          are "error", "warning", "info", and "none".  Defaults to "none".
      </description>
         <property-name>messageType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
               <fmd:property-values>info warning none error</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Message</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Message</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:expert>true</fmd:expert>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectOneChoice component creates a menu-style component, which allows the user to select a single value from a list of items.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectOneChoice</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectOneChoice</component-class><!--org.apache.myfaces.trinidad.CoreSelectOneChoice facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectOneChoice properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The label for the option that represents a value of null, meaning nothing is selected. If unselectedLabel is not set and if the component does not have a selected value, then an option with an empty string as the label and value is rendered as the first option in the choice box (if there isn't an empty option already defined). Once an option has been successfully selected, and if unselectedLabel is not set, then the empty option will not be rendered.
      </description>
         <property-name>unselectedLabel</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Choice</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The Trinidad NavigationTree is used to display data that is structured in a hierarchical format.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreNavigationTree</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreNavigationTree</component-class><!--org.apache.myfaces.trinidad.NavigationTree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported,
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationTree properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the starting level, based on a 0 based index, in the menuModel to render based on the focusPath of the menuModel.
      </description>
         <property-name>startLevel</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation
          should be skipped when row disclosure
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreNavigationTree properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationTree</component-family>
         <renderer-type>org.apache.myfaces.trinidad.NavigationTree</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelButtonBar lays out a set of buttons.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelButtonBar</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelButtonBar</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelButtonBar properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the horizontal alignment to one of start, end, left,
right, or center.</description>
         <property-name>halign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>right start left end center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ButtonBar</renderer-type>
         <component-metadata>
            <unsupported-agents>pda</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandButton org.apache.myfaces.trinidad.CoreResetButton org.apache.myfaces.trinidad.CoreProcessChoiceBar org.apache.myfaces.trinidad.CoreSelectOneChoice</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelRadio control creates, contains and shows a series of items defined by showDetailItem nodes.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelRadio</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelRadio</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelRadio properties-->
      <property>
         <description>the user-visible text of the item</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>position of the control elements. Defaults to
         "start", if not specified. Other value supported is"top".
      </description>
         <property-name>position</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>start</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>top start</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>alignment of the elements. Defaults to
         "center", if not specified. Other values are "start",
         "end", "top", and "bottom".
      </description>
         <property-name>alignment</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>center</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>top start end bottom center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Radio</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreShowDetailItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>PanelPage lays out an entire page.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelPage</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelPage</component-class><!--org.apache.myfaces.trinidad.CorePanelPage facets-->
      <facet>
         <description>Area to put a commandLink to more information about the application.</description>
         <facet-name>appAbout</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The copyright region of the page.  If present, this area
                typically contains an outputText with the copyright information.
      </description>
         <facet-name>appCopyright</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The privacy region of the page.  If present, this area
                typically contains a commandLink to the privacy policy for the
                application.
      </description>
         <facet-name>appPrivacy</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The branding region of the page.  This section typically
                contains a horizontal panelGroup for an image of a logo and an
                outputText for a title.
      </description>
         <facet-name>branding</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreImage org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The footnote information region.  This region provides a location for
                page-level information that is ancillary to the user's task.
      </description>
         <facet-name>infoFootnote</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The return information region. Typically this will contain a "return to [X]" link.
      </description>
         <facet-name>infoReturn</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandLink</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The status information region. This region
                provides a location for page-level status that is important to
                the user's task.
      </description>
         <facet-name>infoStatus</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The user information region.  This region provides a location for
                presenting user sign-in and connection information.
      </description>
         <facet-name>infoUser</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The locator region of the page.  If present, this section
                typically contains either a processTrain, indicating the user's
                location in a multistep process, or navigationPath, containing
                links that will bring the user back to each of the parent
                pages of a tree of pages that he has navigated down into.
      </description>
         <facet-name>location</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreTrain org.apache.myfaces.trinidad.CoreBreadCrumbs</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This location typically contains tabs for the primary layer.</description>
         <facet-name>navigation1</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreNavigationPane</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This location typically contains tabs for the secondary layer.</description>
         <facet-name>navigation2</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreNavigationPane</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>An optional vertically oriented region of contexual components for the main content.  Often this contains a list or tree of links for deeper navigation structure than the global, primary, and secondary regions can provide.</description>
         <facet-name>navigation3</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreNavigationPane org.apache.myfaces.trinidad.CoreNavigationTree</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>This section typically contains global application links or otherwise top level navigation structure links, e.g. "Home", "Preferences", "Help", and "Sign Out".</description>
         <facet-name>navigationGlobal</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreNavigationPane</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The search region of the page.  Typically used for application or system-wide searches.</description>
         <facet-name>search</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreInputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelPage properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies the number of pixels that the auxiliary1 content should consume (this is a width if the orientationis "start" or "end" or a height if the orientation is "bottom").
      </description>
         <property-name>auxiliary1Size</property-name>
         <property-class>int</property-class>
         <default-value>200</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies the number of pixels that the auxiliary2 content should consume (this is a width if the orientationis "start" or "end" or a height if the orientation is "bottom").
      </description>
         <property-name>auxiliary2Size</property-name>
         <property-class>int</property-class>
         <default-value>200</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies the number of pixels that the auxiliaryGlobal content should consume (this is a width if the orientationis "start" or "end" or a height if the orientation is "bottom").
      </description>
         <property-name>auxiliaryGlobalSize</property-name>
         <property-class>int</property-class>
         <default-value>200</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Page</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectManyCheckbox component creates a component which allows
          the user to select many values from a series of checkboxes.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectManyCheckbox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectManyCheckbox</component-class><!--org.apache.myfaces.trinidad.CoreSelectManyCheckbox facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectManyCheckbox properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the control displays the buttons
              horizontally or vertically.The valid values are "horizontal" and
              "vertical",the default being "vertical".
      </description>
         <property-name>layout</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>vertical</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>horizontal vertical</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectMany</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Checkbox</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The messages bean is used at the top of an application page to give
        the user important messaging information.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/messages.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreMessages</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreMessages</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreMessages properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the main text message for the box.</description>
         <property-name>message</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the overridden title text.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether to render all messages or just global messages. Normally
global messages are rendered followed by messages for individual
components. If this attribute is set to true, only the global
messages will be rendered.
      </description>
         <property-name>globalOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Messages</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Messages</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreGoLink</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputNumberSpinbox tag creates a browser input widget;
it is used to enter numbers and it has a spinbox to quickly increment or decrement the number.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputNumberSpinbox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputNumberSpinbox</component-class><!--org.apache.myfaces.trinidad.CoreInputNumberSpinbox facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputNumberSpinbox properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;a CSS style class to use for this component.
      The styleClass attribute value is rendered on the root dom element.
      We provide some public style classes you can use that will affect only the 'content' piece of the component:
      AFFieldTextMarker, AFFieldTextLTRMarker, AFFieldNumberMarker.
      &lt;/html&gt;</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:property-values>AFFieldTextMarker AFFieldTextLTRMarker AFFieldNumberMarker</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the number of columns to display in the text
          control. If no value is specified, a default
          of 1 columns is used. One column is approximately one character
          in the browser's current display font.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The maximum number allowed in the input field.</description>
         <property-name>maximum</property-name>
         <property-class>int</property-class>
         <default-value>2147483647</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The minimum number allowed in the input field.</description>
         <property-name>minimum</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The step size by which the spinbox will increase or decrease the number in the input.</description>
         <property-name>stepSize</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when text becomes selected.</description>
         <property-name>onselect</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Input</component-family>
         <renderer-type>org.apache.myfaces.trinidad.NumberSpinbox</renderer-type>
         <component-metadata>
            <unsupported-agents>pda</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur select valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>&lt;html&gt;
          The form tag creates an HTML &amp;lt;form&amp;gt; element.&lt;/html&gt;</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/form.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreForm</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CoreForm</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Form properties-->
      <property>
         <description>whether the form was submitted on this request</description>
         <property-name>submitted</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata>
               <transient>yes</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreForm properties-->
      <property>
         <description>the target frame for the form</description>
         <property-name>targetFrame</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>whether the form supports file upload.</description>
         <property-name>usesUpload</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The id attribute of the command button whose action would be invoked by default for form submit on hitting enter on any of the input fields of the form.
      </description>
         <property-name>defaultCommand</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Javascript code to be called when the form is submitted.</description>
         <property-name>onsubmit</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Form</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Form</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>submit</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup submit</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelPage org.apache.myfaces.trinidad.CorePage</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputListOfValues is a text field that also supports
launching a dialog to assist users in entering a value.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputListOfValues</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputListOfValues</component-class><!--org.apache.myfaces.trinidad.CoreInputListOfValues facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectInput properties-->
      <property>
         <description>a reference to an action method sent by the commandButton, or the static outcome of an action</description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an return listener</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputListOfValues properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the search description for the button that launches the dialog.
           This text is commonly used by user agents to display tooltip
           help text.
      </description>
         <property-name>searchDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the URI for an alternative image on the button to launch the dialog</description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>event handler for when text becomes selected.</description>
         <property-name>onselect</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the number of columns to display in the text
          control. If no value is specified, a default
          of 30 columns is used. One column is approximately one character
          in the browser's current display font.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of characters that
          can be entered into the text control. Note that
          this value is independent of the "cols" displayed.
      </description>
         <property-name>maximumLength</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>width of the window, if this command is
used to launch a window.</description>
         <property-name>windowWidth</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>height of the window, if this command is
used to launch a window.</description>
         <property-name>windowHeight</property-name>
         <property-class>int</property-class>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectInput</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata>
            <unsupported-agents>pda</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur select valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The subform tag represents an independently submittable
region of a page.  The contents of a subform will only be validated
(or otherwise processed) if a component inside of the subform is
responsible for submitting the page or if the default attribute is set to true.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSubform</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CoreSubform</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Subform properties-->
      <property>
         <description>whether the subform should assume it
has been submitted.  When set to "true", "submitted" will be
considered true if no other subform has been submitted.
      </description>
         <property-name>default</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Subform</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Subform</renderer-type>
         <component-metadata/>
      </component-extension>
   </component>
   <component>
      <description>The reset button control creates a push button which will
          reset the content of a form.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/resetButton.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreResetButton</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreResetButton</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreResetButton properties-->
      <property>
         <description>the textual label of the button.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the reset button should be disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this button.
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              &lt;p&gt;
                If the same access key appears in multiple locations in the
                same page of output, the rendering user agent will cycle
                among the elements accessed by the similar keys.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;Text&lt;/code&gt; attribute of this button instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                The easiest, and most convenient
                way to specify both the text and the mnemonic together is
                to use textAndAccessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ResetButton</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Button</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectBooleanRadio control maps to a single browser input
          radio, grouped with all other selectBooleanRadio controls
          in the same form which share the same "group" attribute.
          It supports displaying a prompt, text, and messages.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectBooleanRadio</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectBooleanRadio</component-class><!--org.apache.myfaces.trinidad.CoreSelectBooleanRadio facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectBoolean properties-->
      <property>
         <description>whether or not the component is
              currently selected.  This is a typesafe alias for the "value"
              attribute. Note that "selected" and "value" attributes should not be used at the same time to avoid conflict.
      </description>
         <property-name>selected</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <alias-of>value</alias-of>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectBooleanRadio properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the text of the radio button.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this radio button.
          For accessibility reasons, this functionality is not supported in
          screen reader mode.
          &lt;p&gt;
            If the same access key appears in multiple locations in the
            same page of output, the rendering user agent will cycle
            among the elements accessed by the similar keys.
          &lt;/p&gt;&lt;p&gt;
            This attribute is sometimes referred to as the "mnemonic".
          &lt;/p&gt;&lt;p&gt;
            The character specified by this attribute
            &lt;strong&gt;must&lt;/strong&gt;exist in the
            &lt;code&gt;text&lt;/code&gt;attribute of this CheckBox instance.
            If it does not, the user will receive no visual indication of
            the existence of the accessKey.
            &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
          and "accessKey" attributes from a single value, using
          conventional ampersand ('&amp;amp;') notation.
          &lt;p&gt;
          For example, setting this attribute to "T&amp;amp;amp;ext" will
          set the text to "Text" and the access key to 'e'.
          &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <property-name>group</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectBoolean</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Radio</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:expert>true</fmd:expert>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>This component lays out a label and children.
      Typically, the only child of this component will be an input element of some sort,
      but as many children as necessary can be added.  When using panelLabelAndMessage with
      a Trinidad input component, you should always set simple="true" on the input component.
      Non-simple Trinidad input components already effectively have all the functionality of
      panelLabelAndMessage. Note that the label and messages that are rendered only apply to the
      "for" component so messages and labels will not be shown if there are multiple input
      child components.
      To lay out multiple panelLabelAndMessage components - or multiple non-simple Trinidad
      input components - you can use the panelForm component.  When panelLabelAndMessage
      components are placed inside a panelForm the labels will line up.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelLabelAndMessage</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelLabelAndMessage</component-class><!--org.apache.myfaces.trinidad.CorePanelLabelAndMessage facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>Component to render after the children.</description>
         <facet-name>end</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelLabelAndMessage properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the panel should show an indicator that its contents are required.</description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Specifies inline styles for the label portion of the component, e.g. "vertical-align: bottom;" to align the label to the bottom of the container.
      </description>
         <property-name>labelStyle</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>An attribute that will simultaneously set both the "label" and "accessKey" attributes from a single value, using conventional ampersand notation.  For example, setting this attribute to "T&amp;amp;ext" will set the label to "Text" and the access key to 'e'.</description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>The ID of the component that this component's label refers to.</description>
         <property-name>for</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.LabelAndMessage</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The panelHeader control places a label and optional icon at the top of a section.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelHeader</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelHeader</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelHeader properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        the label of the header.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        the URI for the icon of the header.
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Set if an error, info, confirmation, or warning header is needed.
      </description>
         <property-name>messageType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>info confirmation warning none error</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Size of this panelHeader. The largest is 0 and corresponds to an H1 header
        the smallest is 5 and corresponds to an H6 Header.  Note that this version of the tag will 
        display all sizes above 2 the same as size 2. Setting the size to a negative number will
        allow the header to be calculated according to its parent header.  The default value for 
        this property is -1.
      </description>
         <property-name>size</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Header</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The showDetailHeader provides a means of toggling the contents under a header
between being disclosed(shown) or undisclosed(hidden).
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreShowDetailHeader</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CoreShowDetailHeader</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ShowDetail properties-->
      <property>
         <description>whether or not to disclose the children</description>
         <property-name>disclosed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>stops the local value of disclosed from being set
        by renderers. This allows the value to always be taken from the value of the disclosed
        value expression. Disclosed values must be updated in other ways (i.e. from a
        disclosure listener)</description>
         <property-name>disclosedTransient</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side - should be skipped when
          events are generated by this component.

          When immediate is false (the default), the disclosure event will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true, the disclosure
          event will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a disclosure listener</description>
         <property-name>disclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreShowDetailHeader properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        the label of the header.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>
        the URI for the icon of the header.
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Set if an error, info, confirmation, or warning header is needed.
      </description>
         <property-name>messageType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>info confirmation warning none error</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Size of this panelHeader. The largest is 0 and corresponds to an H1 header
        the smallest is 5 and corresponds to an H6 Header.  Note that this version of the tag will 
        display all sizes above 2 the same as size 2. Setting the size to a negative number will
        allow the header to be calculated according to its parent header.  The default value for 
        this property is -1.
      </description>
         <property-name>size</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowDetail</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Header</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The outputText component supports styled text.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreOutputText</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreOutputText</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreOutputText properties-->
      <property>
         <description>the length at which the text should automatically begin
              truncating.  When set to zero (the default), the string
              will never truncate.  Values from one to thirteen will
              be treated as thirteen - the outputText component will not
              truncate strings shorter than thirteen characters.
      </description>
         <property-name>truncateAt</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property>
      <property>
         <description>an additional description to be attached
to the text, for use in improving accessibility.  The description will
be available to screen readers and other accessibility agents, but will
not be otherwise visible.
      </description>
         <property-name>description</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; an attribute controlling whether output will
be escaped for the current markup language or not.  This attribute
defaults to true, and should only be set to false if absolutely necessary.
When set to false, you may exposed to cross-site scripting attacks if
the value of this component is any way derived from values supplied
by a user;  see &lt;code&gt;outputFormatted&lt;/code&gt; for a safe
alternative.  In addition, nearly all attributes are ignored when "escape"
is set to false (e.g., "styleClass" is not output).&lt;/html&gt;
      </description>
         <property-name>escape</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Output</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>This components polls the server periodically so that any dependent
          components get a chance to update themselves.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePoll</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CorePoll</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Poll properties-->
      <property>
         <description>whether data validation 
          should be skipped when poll
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a poll listener</description>
         <property-name>pollListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePoll properties-->
      <property>
         <description>the time between poll events, in milliseconds. 
            The default is 5000. If in screen-reader mode, 
            make sure the interval is long enough for the
            screen reader to read through the re-render before a 
            new poll occurs.
      </description>
         <property-name>interval</property-name>
         <property-class>int</property-class>
         <default-value>5000</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Poll</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Poll</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-property>interval</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The goButton creates a push button that navigates directly
to another location instead of delivering an action.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreGoButton</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreGoButton</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Go properties-->
      <property>
         <description>the URI this go component references</description>
         <property-name>destination</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreGoButton properties-->
      <property>
         <description>the textual label of the go component.   Go components will
             also render children elements (including text nodes), though not
             all subclasses of the go component will necessarily support
             children.
      </description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the go component should be considered disabled.
              This attribute only has meaning when go components are used in certain
              container types, such as global headers and tab bars.
      </description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this component.
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              &lt;p&gt;
              If the same access key appears in multiple input fields in the
              same page of output, the rendering user agent will cycle among
              the elements accessed by the similar keys. Note that user agents
              are inconsistent about dealing with two links having same access
              key, and so the cycling behavior is dependent on what the user agent
              provides.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;Text&lt;/code&gt; attribute of this go component instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
      </property>
      <property>
         <description>the target frame for the go component.</description>
         <property-name>targetFrame</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>
        An URL to an image to use for an icon displayed in the button.
      </description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Go</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Button</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>A breadCrumbs component is used in hierarchical
          site layouts to indicate the path back to the root page of the
          hierarchy with links.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/breadCrumbs.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreBreadCrumbs</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreBreadCrumbs</component-class><!--org.apache.myfaces.trinidad.NavigationPath facets-->
      <facet>
         <description>the component to use to stamp each element in the
              navigation. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationPath properties-->
      <property>
         <description>the hierarchy of navigation data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreBreadCrumbs properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether to put links on the same line or indented and
            on new lines.</description>
         <property-name>orientation</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>horizontal</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>horizontal vertical</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationPath</component-family>
         <renderer-type>org.apache.myfaces.trinidad.BreadCrumbs</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The legend adds a legend describing the meaning of an icon.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreLegend</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreLegend</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreLegend properties-->
      <property>
         <description>A string identifying which icon should
be described.  Only one value is currently supported: "required".
      </description>
         <property-name>name</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>required</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>required</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Legend</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>name</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputDate component creates a text field for entering dates and
          a button for picking dates from a calendar.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputDate</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputDate</component-class><!--org.apache.myfaces.trinidad.CoreInputDate facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectInput properties-->
      <property>
         <description>a reference to an action method sent by the commandButton, or the static outcome of an action</description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an return listener</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputDate properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The id of the chooseDate component which can be used to
              pick the Date value for this inputDate. Use the same syntax as partialTriggers
          if the components are separated by Naming Containers.
      </description>
         <property-name>chooseId</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the number of columns to display in the text
          control. If no value is specified, a default
          value will be derived from the current converter, if one
   is attached.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of characters that
          can be entered into the text control. Note that
          this value is independent of the "columns" displayed.
      </description>
         <property-name>maximumLength</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectInput</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Date</renderer-type>
         <component-metadata>
            <unsupported-agents>phone</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>PanelPageHeader lays out the top portion of a page.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelPageHeader</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelPageHeader</component-class><!--org.apache.myfaces.trinidad.CorePanelPageHeader facets-->
      <facet>
         <description>This location typically contains a menuTabs.</description>
         <facet-name>navigation1</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components/>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This location typically contains a menuBar.</description>
         <facet-name>navigation2</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components/>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This section typically contains a menuButtons.</description>
         <facet-name>navigationGlobal</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components/>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>This location typically contains a menuChoice.</description>
         <facet-name>menuSwitch</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>false</fmd:preferred>
               <fmd:preferred-child-components/>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The corporate or organization branding region of the page.  This section typically
                contains a medium size image of the logo of the organization
                owning the page.
      </description>
         <facet-name>branding</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreImage</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The application, module, or product branding region of the page.
                This section typically contains a image of the application logo.
      </description>
         <facet-name>brandingApp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreImage</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The application's contextual branding region of the page.  This section typically
                contains formatted text indicating that ONE context exists
                between the persistent tabs. The user selects the context
                from a centralized aggregate home page of multiple contexts,
                then navigates into a tabbed application pertaining to that
                specific context.
      </description>
         <facet-name>brandingAppContextual</facet-name>
         <facet-extension>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet>
      <facet>
         <description>The search region of the page.</description>
         <facet-name>search</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreInputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </facet-metadata>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelPageHeader properties-->
      <property>
         <description>what the chromeType is for the page: compact or expanded. If
              compact, the productBranding will be shown alongside the
              corporate branding instead of below the corporate branding.
      </description>
         <property-name>chromeType</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>compact</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>compact expanded</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.PageHeader</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectOneRadio component creates a component
          which allows the user to select a single value from a set of items
          displayed as a series of radio buttons.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectOneRadio</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectOneRadio</component-class><!--org.apache.myfaces.trinidad.CoreSelectOneRadio facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectOneRadio properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label for an additional item that indicates no selection has
been made.  When the user selects this item, "required" validation will
not pass, or a null value will be set if the component is not "required".
      </description>
         <property-name>unselectedLabel</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the control displays the buttons
              horizontally or vertically.The valid values are "horizontal" and
              "vertical", the default being "vertical".
      </description>
         <property-name>layout</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>vertical</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>horizontal vertical</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey,  showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Radio</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The chooseColor control creates a palette for picking colors.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreChooseColor</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreChooseColor</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreChooseColor properties-->
      <property>
         <description>the list of colors for the component</description>
         <property-name>colorData</property-name>
         <property-class>java.util.List</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the list of custom colors for the component</description>
         <property-name>customColorData</property-name>
         <property-class>java.util.List</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the width of the standard palette in cells</description>
         <property-name>width</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Choose</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Color</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The commandNavigationItem control creates a navigation item representation of a UIXCommand.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreCommandNavigationItem</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.nav.CoreCommandNavigationItem</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Command properties-->
      <property>
         <description>a reference to an action method sent by the command component,
              or the static outcome of an action. If the action starts with "dialog:",
              useWindow attribute must be set to true.
      </description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a return listener.This method
      is used to process dialog returnEvents which are generated as a result of either
      calling org.apache.myfaces.trinidad.context.RequestContext.returnFromDialog
      directly or declaratively through the use of a returnActionListener tag.</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a launch listener</description>
         <property-name>launchListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreCommandNavigationItem properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Indicates whether processes launched by this command should be
        launched in a secondary dialog window. 'useWindow' requires that the "action"
        attribute start with "dialog:". Set useWindow to 'false' for the outcome of
        the action to be targeted to the existing window.</description>
         <property-name>useWindow</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Height of the window, if this command is used to launch a window.</description>
         <property-name>windowHeight</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Width of the window, if this command is used to launch a window.</description>
         <property-name>windowWidth</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to this item.
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              &lt;p&gt;
                If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle among
              the elements accessed by the similar keys.  Note that user agents
              are inconsistent about dealing with two links having same access
              key, and so the cycling behavior is dependent on what the user agent
              provides.
              &lt;/p&gt;&lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
              &lt;/p&gt;&lt;p&gt;
                The character specified by this attribute
                &lt;strong&gt;must&lt;/strong&gt; exist in the
                &lt;code&gt;text&lt;/code&gt; attribute of this item instance.
                If it does not, the user will receive no visual indication of
                the existence of the accessKey.
                The easiest, and most convenient
                way to specify both the text and the mnemonic together is
                to use textAndAccessKey.
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The URI this component references when activated.  This is an alternative to using an action.</description>
         <property-name>destination</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If value is "true", the component becomes non-interactive.  Otherwise,the default value is "false" and component assumes its expected behavior.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a URI specifying the location of a target image.</description>
         <property-name>icon</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>IMAGE_URI</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the action should be done through a partial page submit
            or not.
            Default is false: no partial page submit.
      </description>
         <property-name>partialSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the item is selected.</description>
         <property-name>selected</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the item is in visited state. Depending on
      the renderer the item may appear in a visited style, if true. This
      property is currently used only within the a train component.
      </description>
         <property-name>visited</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the target frame for the go component.</description>
         <property-name>targetFrame</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the text of the item.</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "text"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "T&amp;amp;amp;ext" will
              set the text to "Text" and the access key to 'e'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>textAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Command</component-family>
         <renderer-type>org.apache.myfaces.trinidad.NavigationItem</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>action click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>text</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The Trinidad Table is used to display tabular data. It also supports selection (both single and multiple), sorting, record navigation and detail-disclosure.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/table.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreTable</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.data.CoreTable</component-class><!--org.apache.myfaces.trinidad.Table facets-->
      <facet>
         <description>the component to stamp below every row which is disclosed. Adding a
detail facet will automatically cause the detail column to be displayed.
      </description>
         <facet-name>detailStamp</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet><!--org.apache.myfaces.trinidad.CoreTable facets-->
      <facet>
         <description>the component used to render the table footer.</description>
         <facet-name>footer</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the component used to render the table header.</description>
         <facet-name>header</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>content to be rendered inline with the navigation bar.
      </description>
         <facet-name>actions</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Iterator properties-->
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the data model being used by this component.
The specific model class is
        &lt;code&gt;org.apache.myfaces.trinidad.model.CollectionModel&lt;/code&gt;.

        You may also use other model instances, e.g.,  
        &lt;code&gt;java.util.List&lt;/code&gt;  ,
        array, and  &lt;code&gt;javax.faces.model.DataModel&lt;/code&gt;.
        This component will automatically convert the instance
        into a &lt;code&gt;CollectionModel&lt;/code&gt;.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of rows to display in a single range of rows.
Some ranges might have fewer
than the number of rows specified by this attribute (eg: the last range
might have an insufficient number of rows).
To display all rows at once, set this attribute to 0.
The default is 25.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>25</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the index of the first row in the currently range of rows.
This index is zero-based. This attribute is used to control
which range of rows to display to the user.
      </description>
         <property-name>first</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property><!--org.apache.myfaces.trinidad.Table properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a sort listener</description>
         <property-name>sortListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the "Show All" option is selected. The "Show All" option
        is available if there are less than 30 options and the row count in
        the data model is known.
      </description>
         <property-name>showAll</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreTable properties-->
      <property>
         <description>if the horizontal grid lines will be drawn.</description>
         <property-name>horizontalGridVisible</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>if the vertical grid lines will be drawn.</description>
         <property-name>verticalGridVisible</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>text displayed when a table is empty.</description>
         <property-name>emptyText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the interval between which the column banding alternates.  For example, a columnBandingInterval of 1 would display alternately banded columns.
      </description>
         <property-name>columnBandingInterval</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the interval between which the row banding alternates.  For example, rowBandingInterval=1 would displayalternately banded rows in the Grid.
      </description>
         <property-name>rowBandingInterval</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether rows in this table selectable. Valid values are "none", "single", "multiple"</description>
         <property-name>rowSelection</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>none</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>none single multiple</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).  This only takes effect if rowSelection attribute enabled.
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the width of the table.  The value must either be a number of pixels or a percentage - it is not a CSS width.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the summary of this table's purpose and structure
         for user agents rendering to non-visual media.
      </description>
         <property-name>summary</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not to enable the show/hide all
              links above the table,
              which allow the user to show/hide all the detail rows.
              To enable the detail rows, a "detailStamp" facet must be set on
              this Table.
      </description>
         <property-name>allDetailsEnabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Table</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Table</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreColumn</fmd:preferred-child-components>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-corecolumn-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The progressIndicator component can be used to give users
          an understanding that there is a back end task in progress.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreProgressIndicator</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreProgressIndicator</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Progress properties-->
      <property>
         <description>The data model being used by this progress component.
              The model should be of type 
              org.apache.myfaces.trinidad.model.BoundedRangeModel.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>A reference to an action method sent by the progress component, 
              or the static outcome of an action. This is invoked when the task
              under progress is complete.
      </description>
         <property-name>action</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>A method reference to an action listener.
            This is invoked after the task in progress is complete.
      </description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--org.apache.myfaces.trinidad.CoreProgressIndicator properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Progress</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Indicator</renderer-type>
         <component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The panelTabbed control creates, contains and shows a series of items defined by showDetailItem nodes.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelTabbed</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelTabbed</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelTabbed properties-->
      <property>
         <description>the position of the tab bar. Defaults to
             "both", if not specified. Other values are "above" and "below".
      </description>
         <property-name>position</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>both</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-values>above both below</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Tab</renderer-type>
         <component-metadata/>
         <unsupported-agents>phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreShowDetailItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The inputText tag creates a browser input text widget;
it may be single-line, multi-line, or a "secret" password field.
It supports displaying a label, text, and messages.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreInputText</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputText</component-class><!--org.apache.myfaces.trinidad.CoreInputText facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreInputText properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the number of rows to display in the text control.
              The default is one. Setting to more than one row
              precludes the use of some attributes, such as
              "secret".
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the type of text wrapping to be used in a multi-row
              text control. This attribute is ignored for single
              row inputText. By default (or "soft"), multirow text
        wraps visually, but does not include carriage returns in the
              submitted value.  Setting this to "off" will disable wrapping;
              the multirow text will scroll horizontally.  Setting it to "hard"
              specifies that the value of the text should include any
              carriage returns needed to wrap the lines.
      </description>
         <property-name>wrap</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>soft hard off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that only applies to single line text
              controls. When set to "true", it hides the actual
              value of the text from the user, and will
              prevent the actual "value" from being shown to the user.
      </description>
         <property-name>secret</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;a CSS style class to use for this component.
      The styleClass attribute value is rendered on the root dom element.
      We provide some public style classes you can use that will affect only the 'content' piece of the component:
      AFFieldTextMarker, AFFieldTextLTRMarker, AFPhoneFieldTextMarker, AFPostalCodeFieldTextMarker,
      AFAddressFieldTextMarker, AFFieldNumberMarker.
      You can still modify the public style definitions for these marker style classes
      and it will be picked up by using these "Marker" style class
      because in our base skin implementation we map to the public style by doing this:
      af|inputText.AFFieldNumberMarker af|inputText::content {-tr-rule-ref:selector(".AFFieldNumber")}.
      We recommend that you do not add style properties to the "Marker" style classes.
      They are used solely in the css descendant selector to point to the content pseudo-element.&lt;/html&gt;
      </description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:property-values>AFFieldTextMarker AFFieldTextLTRMarker AFPhoneFieldTextMarker AFPostalCodeFieldTextMarker AFAddressFieldTextMarker AFFieldNumberMarker</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the number of columns to display in the text
          control. If no value is specified, a default
          of 30 columns is used. One column is approximately one character
          in the browser's current display font.
      </description>
         <property-name>columns</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of characters that
          can be entered into the text control. Note that
          this value is independent of the "cols" displayed.
          If set to 0 or less, the maximumLength is ignored.
      </description>
         <property-name>maximumLength</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether previous values of text fields in the form
          should be remembered and offered for auto completion.
      </description>
         <property-name>autoComplete</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>on</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>on off</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>event handler for when text becomes selected.</description>
         <property-name>onselect</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Input</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur select valueChange</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The outputFormatted bean accepts a string in its "value" attribute
        containing a very limited set of HTML markup and outputs formatted
        results.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreOutputFormatted</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreOutputFormatted</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreOutputFormatted properties-->
      <property>
         <description>the style usage, intended to make it easier to
              put the correct style on the text.
              Set this attribute when the outputFormatted
              is for instruction text, page stamp text, or inContextBranding
              text.
              The valid values are "instruction" ,
              "pageStamp", and "inContextBranding".
              If styleUsage and styleClass attributes are both set,
              the styleClass attribute takes precedence.
      </description>
         <property-name>styleUsage</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>pageStamp instruction inContextBranding</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Output</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Formatted</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The importScript tag supports importing the built-in scripts
         provided by Apache Trinidad.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/importScript.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreImportScript</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CoreImportScript</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreImportScript properties-->
      <property>
         <description>a series of function names</description>
         <property-name>names</property-name>
         <property-class>java.lang.String[]</property-class>
         <suggested-value>{localName} {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ImportScript</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ImportScript</renderer-type>
         <component-metadata>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
         <fmd:component-metadata>
            <fmd:default-property>names</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The separator is used anywhere to create a horizontal separator
between items.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/separator.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreSeparator</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.output.CoreSeparator</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSeparator properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Separator</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectOneListbox  component creates a component which allows
          the user to select a single value from a list of items.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectOneListbox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectOneListbox</component-class><!--org.apache.myfaces.trinidad.CoreSelectOneListbox facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectOneListbox properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The number of items that should be visible in the list. The renderer may constrain the maximum and minimum number of items shown.</description>
         <property-name>size</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the label for an additional item that indicates no selection has
   been made.  When the user selects this item, "required" validation will
   not pass, or a null value will be set if the component is not "required".
         </description>
         <property-name>unselectedLabel</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Listbox</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectManyListbox component creates a component which allows
          the user to select many values from a list of items.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectManyListbox</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectManyListbox</component-class><!--org.apache.myfaces.trinidad.CoreSelectManyListbox facets-->
      <facet>
         <description>This facet should contain field level help.</description>
         <facet-name>help</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectManyListbox properties-->
      <property>
         <description>the CSS styles to attach to the content of the component.  For example, you can set the width of that portion to 100 pixels by setting this attribute to "width: 100px". </description>
         <property-name>contentStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>how many items should be visible.  Small values may be overridden if the platform cannot render a list of that size correctly.
      </description>
         <property-name>size</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label of the bean.</description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Label {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives
      </description>
         <property-name>simple</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.
      </description>
         <property-name>showRequired</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>APPEARANCE</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Character used to gain quick access to
               the form element specified by the
         &lt;code&gt;for&lt;/code&gt;, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              &lt;p&gt;
                This attribute is sometimes referred to as the "mnemonic".
                &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>accessKey</property-name>
         <property-class>char</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;amp;') notation.
              &lt;p&gt;
              For example, setting this attribute to "L&amp;amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>labelAndAccessKey</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
               <virtual>true</virtual>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).
      </description>
         <property-name>autoSubmit</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectMany</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Listbox</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <fmd:default-property>label</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>A panel component that displays its children in a group.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CorePanelGroupLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelGroupLayout</component-class><!--org.apache.myfaces.trinidad.CorePanelGroupLayout facets-->
      <facet>
         <description>Content to be rendered once between each of the
                other children.</description>
         <facet-name>separator</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelGroupLayout properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Type of layout, either "vertical", "horizontal" (no wrapping) or"default" (horizontal with wrapping).</description>
         <property-name>layout</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>default</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>horizontal default vertical</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.GroupLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>&lt;html&gt;
          The document tag creates each of the standard root elements of an HTML page:  &amp;lt;html&amp;gt;, &amp;lt;body&amp;gt;, and &amp;lt;head&amp;gt;.&lt;/html&gt;
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/document.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CoreDocument</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.CoreDocument</component-class><!--org.apache.myfaces.trinidad.CoreDocument facets-->
      <facet>
         <description>Content to be rendered as meta data inside the "head" section.</description>
         <facet-name>metaContainer</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreDocument properties-->
      <property>
         <description>The title of the document.  (This title doesn't have to match the
            title on any contained panelPage.)
      </description>
         <property-name>title</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Title {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specify the state saving behavior for this page. client=force to be (full) client;
             server=force to be server-side; default=follows the settings of the web.xml</description>
         <property-name>stateSaving</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>default</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>default client server</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        Set if the page should render in default standards mode, quirks mode, or strict mode.  Behavior of the modes are:&lt;ul&gt;
&lt;li&gt;"default": renders as transitional doctypes for both XHTML and HTML,
with &lt;a href="http://developer.mozilla.org/en/docs/Gecko's_%22Almost_Standards%22_Mode"&gt;"almost standards"&lt;/a&gt; rendering mode&lt;/li&gt;
&lt;li&gt;"strict": renders as a strict doctype for both XHTML and HTML, also
in standards rendering mode&lt;/li&gt;
&lt;li&gt;"quirks": renders HTML pages in quirks mode, and XHTML with
a transitional doctype, but standards mode  (there is no quirks mode for
XHTML).&lt;/li&gt;&lt;/ul&gt;
      </description>
         <property-name>mode</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>default</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>default strict quirks</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onload Javascript handler.</description>
         <property-name>onload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onunload Javascript handler.</description>
         <property-name>onunload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the id of the component to which you want the
        focus to be when the full page renders. The accessibility-mode
        must be set to "inaccessible" for this feature to be on.
      </description>
         <property-name>initialFocusId</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
               <unsupported-agents>phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Document</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Document</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>load</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup load unload</fmd:event-names>
            <fmd:default-property>title</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreForm</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The selectManyShuttle component provides a mechanism for selecting
   multiple values from a list of values by allowing the user to move
   items between two lists.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.CoreSelectManyShuttle</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectManyShuttle</component-class><!--org.apache.myfaces.trinidad.CoreSelectManyShuttle facets-->
      <facet>
         <description>the filter above the leading list.</description>
         <facet-name>filter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectOneChoice</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the footer of buttons/images under the leading list.</description>
         <facet-name>leadingFooter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the footer of buttons/images under the trailing list.</description>
         <facet-name>trailingFooter</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CoreSelectManyShuttle properties-->
      <property>
         <description>whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.
      </description>
         <property-name>valuePassThru</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the element is read-only.</description>
         <property-name>readOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the element is disabled.</description>
         <property-name>disabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>event handler for when the value is changed.</description>
         <property-name>onchange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component losing the focus.</description>
         <property-name>onblur</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the event handler for the component gaining the focus.</description>
         <property-name>onfocus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the display size(number of items) of the lists. The size
              specified must be between 10 and 20 items. If the attribute is not
              set or has a value less than 10, the size would have a default or
              minimum value of 10. If the attribute value specified is more than
              20 items, the size would have the maximum value of 20.
      </description>
         <property-name>size</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the header of the leading list of the shuttle.</description>
         <property-name>leadingHeader</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the header of the trailing list of the shuttle.</description>
         <property-name>trailingHeader</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>whether or not the leading list has an area to display descriptions.</description>
         <property-name>leadingDescShown</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether or not the trailing list has an area to display descriptions.</description>
         <property-name>trailingDescShown</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the label for the shuttle that is used to identify the component only when displaying error messages. The label specified does not otherwise appear on the page.
      </description>
         <property-name>label</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectMany</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Shuttle</renderer-type>
         <component-metadata>
            <fmd:default-event-name>change</fmd:default-event-name>
            <fmd:event-names>change click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup focus blur valueChange</fmd:event-names>
            <unsupported-agents>pda phone voice</unsupported-agents>
         </component-metadata>
      </component-extension>
   </component>
   <component>
      <description>
      The panelCaptionGroup is used to render a set of components,
      into a related and more managable grouping.  The group is surrounded by a border
      containing the group caption.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidad/metadata/icons/PanelCaptionGroup.png</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.CorePanelCaptionGroup</component-type>
      <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelCaptionGroup</component-class><!--org.apache.myfaces.trinidad.CorePanelCaptionGroup facets-->
      <facet>
         <description>Content to be rendered as the caption for the group content.  The
      facet takes precidence over the captionText attribute and can be used to specify more complex
      or non-text captions (e.g. images).
      </description>
         <facet-name>caption</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CorePanelCaptionGroup properties-->
      <property>
         <description>the CSS styles to use for this component.</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a CSS style class to use for this component.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The short description of the component. This text is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
        &lt;p&gt;
        This component will listen on the trigger components. If one of the
        trigger components receives an event that will cause it to update
        in some way, this component will request to be updated too.&lt;/p&gt;
        &lt;p&gt;
        Separate multiple triggers with a space. e.g., partialTriggers="cmp1 cmp2"
        &lt;/p&gt;
        &lt;p&gt;
        Identifiers must account for NamingContainers.  You can use a single colon to start the search from the root,
        or use multiple colons to move up through the NamingContainer. For example,
        "::" will pop out of this component's naming container (it pops out of itself if it is a naming container), 
        ":::" will pop out of two naming containers, etc. The search for
        the partialTrigger begins from there. e.g., partialTriggers=":::commandButton1" the search begins for the 
        component with id = commandButton1 after popping out of two naming containers relative to this component.
        To go into naming containers, you separate the naming containers with ':', e.g.,partialTriggers= "nc1:nc2:nc3:componentId".&lt;/p&gt;
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        The text to be rendered as the caption for the group content.
      </description>
         <property-name>captionText</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Panel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.PanelCaptionGroup</renderer-type>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>UIXIterator is a component that performs iteration
over its child components.  It is like a UIXTable without any chrome.
While functionally similar to a forEach tag, an iterator is a component
that does its processing during rendering, while forEach runs during
the assembly of the component tree, and doesn't leave behind a component in the
heirarchy. </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Iterator</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXIterator</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Iterator properties-->
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the data model being used by this component.
The specific model class is
        &lt;code&gt;org.apache.myfaces.trinidad.model.CollectionModel&lt;/code&gt;.

        You may also use other model instances, e.g.,  
        &lt;code&gt;java.util.List&lt;/code&gt;  ,
        array, and  &lt;code&gt;javax.faces.model.DataModel&lt;/code&gt;.
        This component will automatically convert the instance
        into a &lt;code&gt;CollectionModel&lt;/code&gt;.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of rows to display in a single range of rows.
Some ranges might have fewer
than the number of rows specified by this attribute (eg: the last range
might have an insufficient number of rows).
To display all rows at once, set this attribute to 0.
The default is 25.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>25</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the index of the first row in the currently range of rows.
This index is zero-based. This attribute is used to control
which range of rows to display to the user.
      </description>
         <property-name>first</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Iterator</component-family>
      </component-extension>
   </component>
   <component>
      <description>UIXSelectOrder is a base abstraction for 
          components that allow selection of multiple of a
	  series of selectItem controls, where order
          is relevant.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectOrder</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectOrder</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOrder</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Shuttle</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The group component is an invisible control that aggregates semantically-related children; the group itself has no associated client representation (visual or API).
Some parent components may have special representation for groups like adding separators around the group but this is a special case and is not always rendered this way.
In most cases, only the children of the group will be rendered directly to the page.
There will be no layout applied to the children so the natural layout behavior of the underlying HTML elements will apply.
If you require a more predictable layout, you should use a layout component such as panelGroupLayout.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Group</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXGroup</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Group properties-->
      <property>
         <description>
        &lt;html&gt;
          indicates if a visual group start boundary is desired. The default value of 'dontCare' 
          indicates no preference. A value of 'show' indicates a preference to show a start boundary.
          A value of 'hide' indicates a preference to not show a start boundary. Regardless of the 
          start boundary value, whether a visual boundary will be displayed is up to the group's 
          parent component.
        &lt;/html&gt;
          
      </description>
         <property-name>startBoundary</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>dontCare</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>show hide dontCare</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        &lt;html&gt;
          indicates if a visual group end boundary is desired. The default value of 'dontCare' 
          indicates no preference. A value of 'show' indicates a preference to show an end boundary.
          A value of 'hide' indicates a preference to not show an end boundary. Regardless of the 
          end boundary value, whether a visual boundary will be displayed is up to the group's 
          parent component.
        &lt;/html&gt;
          
      </description>
         <property-name>endBoundary</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>dontCare</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
               <fmd:property-values>show hide dontCare</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        &lt;html&gt;
          a title value for the group. Whether anything is done with this title value is up to the 
          group's parent component.
        &lt;/html&gt;
          
      </description>
         <property-name>title</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Group</component-family>
         <component-metadata/>
      </component-extension>
   </component>
   <component>
      <description>Inserts a region into the current page.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/region.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.ComponentRef</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXComponentRef</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentRef properties-->
      <property>
         <description>the value of the component.  This value be evaluated during
              all lifecycle processing and
              made available to the componentDef as an EL variable named "bindings".
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
      </property>
      <property>
         <description>&lt;html&gt; which componnet to use. This should match a
&amp;lt;component-type&amp;gt; string in a region metadata file.
An example might look like "org.apache.myfaces.trinidaddemo.region.stock".
This attribute can be bound to an EL expression or manually
set, which will change the region definition used the next
time the page renders.&lt;/html&gt;
      </description>
         <property-name>componentType</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>&lt;html&gt; The name of the EL variable that will be set when encoding the component.
        This attribute is set by the tr:componentDef on behalf of the UIXComponentRef, and not the tr:componentRef.
        For example,
              let's say this "var" attribute is set to the value "attrs";
              if the &amp;lt;tr:componentRef&amp;gt; tag has an attribute called "bar",
              The value of "bar" can be referenced from a child within
              &amp;lt;tr:componentDef&amp;gt; using the expression
              &lt;code&gt;#{attrs.bar}&lt;/code&gt;.&lt;/html&gt;
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ComponentRef</component-family>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>The document control is the base abstraction for an entire document.  It will generally be used immediately inside a UIViewRoot.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Document</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXDocument</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Document</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Document</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>A navigationPath component is used in hierarchical
          site layouts to indicate the path back to the root page of the
          hierarchy with links.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.NavigationPath</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXNavigationPath</component-class><!--org.apache.myfaces.trinidad.NavigationPath facets-->
      <facet>
         <description>the component to use to stamp each element in the
              navigation. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationPath properties-->
      <property>
         <description>the hierarchy of navigation data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationPath</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Path</renderer-type>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>Signifies an element that represents a process and binds to a menuModel.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Process</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXProcess</component-class><!--org.apache.myfaces.trinidad.Process facets-->
      <facet>
         <description>the component to use to stamp each element in the
              process. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Process properties-->
      <property>
         <description>the hierarchy of data - must be of type 
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Process</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ChoiceBar</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>The Apache Trinidad Chart is used to diplay data in a chart format.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Chart</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXChart</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Chart properties-->
      <property>
         <description>the data model being used by this component.The specific model class must be derived from 
        &lt;code&gt;org.apache.myfaces.trinidad.model.ChartModel&lt;/code&gt;. 
        The derived class must override the abstract methods to provide the required values for chart display.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a drill down listener that
         will be called when the user drills down into the chart data.The method must take a parameter of type &lt;code&gt;org.apache.myfaces.trinidad.event.ChartDrillDownEvent&lt;/code&gt;.
      </description>
         <property-name>chartDrillDownListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Chart</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Chart</renderer-type>
         <component-metadata/>
         <unsupported-agents>pda phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-property>id</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Represents an interactive tree component.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Tree</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXTree</component-class><!--org.apache.myfaces.trinidad.Tree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported, 
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.  In a treeTable, this must be a column.
      </description>
         <facet-name>nodeStamp</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Tree properties-->
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
          Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type 
        org.apache.myfaces.trinidad.model.TreeModel</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the rowKey of the currently focused row.
        The rowKeys of the ancestor rows of the focus row are added
        to the expandedRowKeys RowKeySet by default.
      </description>
         <property-name>focusRowKey</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a focus listener</description>
         <property-name>focusListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
        If upon initial rendering, the current subtree under the focused row path
        should be expanded. A RowDisclosureEvent is broadcast from the encode begin of the 
        component so that listeners are properly notified of the disclosure.
      </description>
         <property-name>initiallyExpanded</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--Warning: this component has no component-family!-->
      <component-extension/><!--Warning: this component has no component-family!-->
      <component-extension/>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Tree</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Tree</renderer-type>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>UIXSelectRange is a base abstraction for 
          components that select a
          range.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectRange</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectRange</component-class><!--org.apache.myfaces.trinidad.SelectRange facets-->
      <facet>
         <description>use to customize the label of each range selection.</description>
         <facet-name>rangeLabel</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectRange properties-->
      <property>
         <description>the name of the EL variable that provides access to the "start"
              and "end" variables that point to the start and end row in
              the each range from the data model. This can be used to customize
              the range text.
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation 
          should be skipped when range change
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the data model being used by this component.
The specific model class is
        &lt;code&gt;org.apache.myfaces.trinidad.model.CollectionModel&lt;/code&gt;.

        You may also use other model instances, e.g.,  
        &lt;code&gt;java.util.List&lt;/code&gt;  ,
        array, and  &lt;code&gt;javax.faces.model.DataModel&lt;/code&gt;.
        This component will automatically convert the instance
        into a &lt;code&gt;CollectionModel&lt;/code&gt;.&lt;/html&gt;
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of rows to display in a single range of rows.
Some ranges might have fewer
than the number of rows specified by this attribute (eg: the last range
might have an insufficient number of rows).
To display all rows at once, set this attribute to 0.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>25</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the index of the first row in the currently range of rows.
This index is zero-based. This attribute is used to control
which range of rows to display to the user.
      </description>
         <property-name>first</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectRange</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ChoiceBar</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXMessages is the base component class for components
that display a messages for an entire page.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Messages</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXMessages</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Messages</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Messages</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXInput is a base class for all Apache Trinidad input components.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/input.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.Input</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXInput</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Input</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Object is a base abstraction for components that represent object
          resources (like image) that have no server-side behavior and
          do not participate in type conversion.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Object</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXObject</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Object</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Object</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXReset is a base abstraction for components that reset the state
          of a page.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Reset</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXReset</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Reset</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Reset</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>selectInput is a base abstraction for
          components that allow both input and selection 
          from a list of possible values.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectInput</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectInput</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectInput properties-->
      <property>
         <description>a reference to an action method sent by the commandButton, or the static outcome of an action</description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an return listener</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectInput</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata/>
      </component-extension>
   </component>
   <component>
      <description>The navigationLevel component creates a series of navigation items representing one level in a navigation hierarchy.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.NavigationLevel</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXNavigationLevel</component-class><!--org.apache.myfaces.trinidad.NavigationLevel facets-->
      <facet>
         <description>the component to use to stamp each element in the
              navigation. A CommandNavigationItem is expected.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationLevel properties-->
      <property>
         <description>the hierarchy of navigation data - must be of type
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the level, based on a 0 based index, in the menuModel to render based on the focusPath of the menuModel.
      </description>
         <property-name>level</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationLevel</component-family>
         <renderer-type>org.apache.myfaces.trinidad.NavigationLevel</renderer-type>
         <naming-container>true</naming-container>
      </component-extension>
   </component>
   <component>
      <description>UIXSingleStep is a base abstraction for components
          that implement ActionSource and 
          navigate back and forth through a sequence of known steps.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SingleStep</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSingleStep</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SingleStep properties-->
      <property>
         <description>the current step. The valid range is 1 to maxStep.
              It defaults to 1.</description>
         <property-name>selectedStep</property-name>
         <property-class>int</property-class>
         <default-value>1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the last possible step. If this value is not known, 
              it should be set to
              MAX_VALUE_UNKNOWN (-1),
              which is also the default value. If maxStep is
              MAX_VALUE_UNKNOWN, then no text is rendered between the Back/Next
              buttons. When maxStep is 2 and selectedStep
              is 1, then only a Continue button is rendered.
      </description>
         <property-name>maxStep</property-name>
         <property-class>int</property-class>
         <default-value>-1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener 
             that will be called when the singleStep component navigates
             to the previous step.
      </description>
         <property-name>previousActionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener  
             that will be called when the singleStep component navigates
             to the next step.
      </description>
         <property-name>nextActionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a reference to an action method  
             that will be called when the singleStep component navigates
             to the next step, or the static outcome of the action.
      </description>
         <property-name>nextAction</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a reference to an action method  
             that will be called when the singleStep component navigates
             to the previous step, or the static outcome of the action.
      </description>
         <property-name>previousAction</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SingleStep</component-family>
         <renderer-type>org.apache.myfaces.trinidad.ButtonBar</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>selectedStep</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Apache Trinidad navigationTree components are used to display hierarchical navigation data.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.NavigationTree</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXNavigationTree</component-class><!--org.apache.myfaces.trinidad.NavigationTree facets-->
      <facet>
         <description>the component to use to stamp each element in the
              tree. Only certain types of components are supported,
              including all
              components with no behavior and most components that implement the
              EditableValueHolder or ActionSource interfaces.
      </description>
         <facet-name>nodeStamp</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.NavigationTree properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the hierarchy of tree data - must be of type
            org.apache.myfaces.trinidad.model.MenuModel
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the starting level, based on a 0 based index, in the menuModel to render based on the focusPath of the menuModel.
      </description>
         <property-name>startLevel</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation
          should be skipped when row disclosure
          events are generated by this component.

          When immediate is false (the default), events will
          be delivered during the Invoke Application phase, which
          will trigger validation.  When set to true,  events
          will be executed during the Apply Request Values phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property><!--Warning: this component has no component-family!-->
      <component-extension/>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.NavigationTree</component-family>
         <renderer-type>org.apache.myfaces.trinidad.NavigationTree</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXTable is the base abstraction for table components.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Table</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXTable</component-class><!--org.apache.myfaces.trinidad.Table facets-->
      <facet>
         <description>the component to stamp below every row which is disclosed. Adding a
detail facet will automatically cause the detail column to be displayed.
      </description>
         <facet-name>detailStamp</facet-name>
         <facet-extension>
            <facet-metadata/>
         </facet-extension>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.CollectionBase properties-->
      <property>
         <description>Name of the EL variable used to reference each element of this collection.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
      </description>
         <property-name>var</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Iterator properties-->
      <property>
         <description>&lt;html&gt;
 Name of the EL variable used to reference the varStatus information.
          Once this component has completed rendering, this variable is
          removed (or reverted back to its previous value).
          The VarStatus provides contextual information about the state of the
          component to EL expressions. For components that iterate, varStatus
          also provides loop counter information.  Please see the this 
          component's documentation for the specific properties on the varStatus.
          The common properties on varStatus include:&lt;ul&gt;&lt;li&gt;"model" - returns the CollectionModel for this component&lt;/li&gt;&lt;li&gt;"index" - returns the zero based row index&lt;/li&gt;&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>varStatus</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the data model being used by this component.
The specific model class is
        &lt;code&gt;org.apache.myfaces.trinidad.model.CollectionModel&lt;/code&gt;.

        You may also use other model instances, e.g.,  
        &lt;code&gt;java.util.List&lt;/code&gt;  ,
        array, and  &lt;code&gt;javax.faces.model.DataModel&lt;/code&gt;.
        This component will automatically convert the instance
        into a &lt;code&gt;CollectionModel&lt;/code&gt;.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the maximum number of rows to display in a single range of rows.
Some ranges might have fewer
than the number of rows specified by this attribute (eg: the last range
might have an insufficient number of rows).
To display all rows at once, set this attribute to 0.
The default is 25.
      </description>
         <property-name>rows</property-name>
         <property-class>int</property-class>
         <default-value>25</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the index of the first row in the currently range of rows.
This index is zero-based. This attribute is used to control
which range of rows to display to the user.
      </description>
         <property-name>first</property-name>
         <property-class>int</property-class>
         <default-value>0</default-value>
      </property><!--org.apache.myfaces.trinidad.Table properties-->
      <property>
         <description>a method reference to an ExpansionListener</description>
         <property-name>rowDisclosureListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the set of disclosed rows for this component.
Each entry in the set is a rowKey.
      </description>
         <property-name>disclosedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a selection listener</description>
         <property-name>selectionListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the selection state for this component.</description>
         <property-name>selectedRowKeys</property-name>
         <property-class>org.apache.myfaces.trinidad.model.RowKeySet</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether or not data validation - client-side or
            server-side -
          should take place when
          events are generated by this component.

          When immediate is true, the default ActionListener
          provided by the JavaServer Faces implementation
          should be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>a method reference to a sort listener</description>
         <property-name>sortListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a rangeChange listener that
         will be called when a new range is selected.
      </description>
         <property-name>rangeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the "Show All" option is selected. The "Show All" option
        is available if there are less than 30 options and the row count in
        the data model is known.
      </description>
         <property-name>showAll</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property><!--Warning: this component has no component-family!-->
      <component-extension/><!--Warning: this component has no component-family!-->
      <component-extension/>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Table</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Table</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>Base class for composite collection decorator.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.DecorateCollection</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXDecorateCollection</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <naming-container>true</naming-container>
         <component-family>org.apache.myfaces.trinidad.DecorateCollection</component-family>
         <renderer-type>org.apache.myfaces.trinidad.DecorateCollection</renderer-type>
         <component-metadata/>
         <unsupported-agents>pda phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-property>id</fmd:default-property>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreTable org.apache.myfaces.trinidad.CoreTreeTable org.apache.myfaces.trinidad.CoreTree</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>showMany is the base abstraction for components that contain
a group of showDetails and can display multiple items at a time.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.ShowMany</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXShowMany</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowMany</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Accordion</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>This is base abstraction for column.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Column</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXColumn</component-class><!--org.apache.myfaces.trinidad.Column facets-->
      <facet>
         <description>the node to use to render this column's header.</description>
         <facet-name>header</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>the node to render as this column's footer.</description>
         <facet-name>footer</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Column properties-->
      <property>
         <description>The property that is displayed by this Column. This is the
            property that the framework might use to (for example) sort
            the Table's data.
      </description>
         <property-name>sortProperty</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Column</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Column</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXProgress is a base abstraction for 
          components that implement ActionSource and 
          indicate the progress of tasks running in
	    the server, typically navigating to a special
          page once the task is complete.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Progress</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXProgress</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Progress properties-->
      <property>
         <description>The data model being used by this progress component.
              The model should be of type 
              org.apache.myfaces.trinidad.model.BoundedRangeModel.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>A reference to an action method sent by the progress component, 
              or the static outcome of an action. This is invoked when the task
              under progress is complete.
      </description>
         <property-name>action</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>A method reference to an action listener.
            This is invoked after the task in progress is complete.
      </description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Progress</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Indicator</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The form control is the base abstraction for a submitted
region of a page.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Form</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXForm</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Form properties-->
      <property>
         <description>whether the form was submitted on this request</description>
         <property-name>submitted</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <property-metadata>
               <transient>yes</transient>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Form</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Form</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXCommand is a base abstraction for
          components that implement ActionSource and DialogSource.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Command</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXCommand</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Command properties-->
      <property>
         <description>a reference to an action method sent by the command component,
              or the static outcome of an action. If the action starts with "dialog:",
              useWindow attribute must be set to true.
      </description>
         <property-name>actionExpression</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to an action listener</description>
         <property-name>actionListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a return listener.This method
      is used to process dialog returnEvents which are generated as a result of either
      calling org.apache.myfaces.trinidad.context.RequestContext.returnFromDialog
      directly or declaratively through the use of a returnActionListener tag.</description>
         <property-name>returnListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a launch listener</description>
         <property-name>launchListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether data validation - client-side or
            server-side -
          will be skipped when
          events are generated by this component.

          When immediate is true, the command's action and
          ActionListeners, including the default ActionListener
          provided by the JavaServer Faces implementation,
          will be executed during Apply Request Values phase
          of the request processing lifecycle, rather than
          waiting until the Invoke Application phase.  Because
          validation runs during Process Validators (after
          Apply Request Values, but before Invoke Application),
          setting immediate to true will skip validation.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Command</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Button</renderer-type>
         <component-metadata/>
      </component-extension>
   </component>
   <component>
      <description>UIXSelectOne is a base abstraction for 
          components that allow selection of a single in a
    series of selectItem components.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectOne</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectOne</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Choice</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>showOne is the base abstraction for components that contains
a group of showDetails, but displays one of them.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.ShowOne</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXShowOne</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.ShowOne</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Tab</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>UIXOutput is a concrete base class for all Apache Trinidad output components that
support type conversion.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Output</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXOutput</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Output</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Text</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>value</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>CellFormat components are used to format cells in a
          rowLayout component.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/cellFormat.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlCellFormat</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlCellFormat</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlCellFormat properties-->
      <property>
         <description>This attribute should be used to provide an abbreviated form of
             the cell's content, and may be rendered by user agents when
             appropriate in place of the cell's content. Abbreviated names
             should be short since user agents may render them repeatedly
             (especially if this cell is a header cell).
      </description>
         <property-name>shortText</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the horizontal alignment of the grid row elements.
              The acceptable values are "center", "left", "right", "start", and "end".
      </description>
         <property-name>halign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>right start left end center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the vertical alignment of the grid row elements.
              The acceptable values are "middle", "top", and "bottom".
      </description>
         <property-name>valign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>middle top bottom</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the preferred width of the enclosed layout elements.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the preferred height of the enclosed layout elements.</description>
         <property-name>height</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the number of cells wide the child layout element will be.</description>
         <property-name>columnSpan</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the number of cells high the child layout element will be.</description>
         <property-name>rowSpan</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>whether automatic text wrapping should be disabled for
              this cell.</description>
         <property-name>wrappingDisabled</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>Indicates which table cells are the headers for this cell. This
             attribute is used by screen readers to associate header
             information with data cells. This must be set to a
             space-separated list of IDs. Each ID must be the ID of a
             pertinent header cell.
      </description>
         <property-name>headers</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:required>false</fmd:required>
            </fmd:property-metadata>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Indicates whether or not this table cell is a header cell or a data cell.
        Setting this attribute to 'true' will mark this cell as a header cell.
      </description>
         <property-name>header</property-name>
         <property-class>boolean</property-class>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.CellFormat</component-family>
         <renderer-type>org.apache.myfaces.trinidad.CellFormat</renderer-type>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlcellformat-holder</fmd:required-ancestor-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>&lt;html&gt;
          A TableLayout is a thin wrapper around the HTML &amp;lt;table&amp;gt;
          element.  It contains a series of row layout elements.&lt;/html&gt;
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/tableLayout.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlTableLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlTableLayout</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlTableLayout properties-->
      <property>
         <description>the preferred total width of the layout.</description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the horizontal alignment of the table.
              The acceptable values are "center", "left", "right", "start", and "end".
      </description>
         <property-name>halign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>right start left end center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the spacing between cells.</description>
         <property-name>cellSpacing</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the spacing within cells.</description>
         <property-name>cellPadding</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the border width around each cell.</description>
         <property-name>borderWidth</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>The summary of the table's purpose and structure
             for user agents rendering to non-visual media. This attribute
             must be set if this element is being used to implement a data
             table (instead of a layout table).
      </description>
         <property-name>summary</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.TableLayout</component-family>
         <renderer-type>org.apache.myfaces.trinidad.TableLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlRowLayout</fmd:preferred-child-components>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-htmlrowlayout-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The frame component is used to specify attributes needed by an
          HTML frame.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/frame.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlFrame</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlFrame</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlFrame properties-->
      <property>
         <description>the URI for the source of this frame</description>
         <property-name>source</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>true</fmd:required>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; This attribute specifies a link to a long description of the
             frame. This description should supplement the short description
             provided using the &lt;code&gt;shortDesc&lt;/code&gt; attribute, and
             may be particularly useful for non-visual user agents.&lt;/html&gt;
      </description>
         <property-name>longDescURL</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the name used to identify this frame</description>
         <property-name>name</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the proposed width of this frame
              This can be in pixels or percentage. This attribute is used only if this
              frame is a left/right facet of a frameBorderLayout component.
      </description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the proposed height of this frame.
              This can be in pixels or percentage. This attribute is used only if this
              frame is a top/bottom facet of a frameBorderLayout component.
      </description>
         <property-name>height</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the width of the frame margin. The value must be greater than zero (pixels).</description>
         <property-name>marginWidth</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>the width of the frame margin. The value must be greater than zero (pixels).</description>
         <property-name>marginHeight</property-name>
         <property-class>int</property-class>
      </property>
      <property>
         <description>&lt;html&gt; whether or not scrollbars are available on this
              frame. Valid values for this attribute are the following
              constants:&lt;br/&gt;


     "yes" specifies that scrollbars are always available. &lt;br/&gt;
     "no" specifies that scrollbars are never available. &lt;br/&gt;
     "auto" specifies that the browser determines whether to display scroll
              bars based on the size of the frame and its content. If
              you do not specify a value for scrolling, the default
              value is "auto"&lt;/html&gt;
      </description>
         <property-name>scrolling</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>auto</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Frame</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Frame</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>source</fmd:default-property>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlframe-holder</fmd:required-ancestor-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Tag for the HTML body element.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/body.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlBody</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlBody</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlBody properties-->
      <property>
         <description>whether or not Trinidad will allow the first click to go
             through in certain instances. When a PPR event occurs, we block
             all subsequent user input until it completes. However, there may
             be instances where the client wants to receive the very first
             click. For example, if the user entered text in an inputText
             that fires a PPR request, then the user immediately clicked
             a submit button two events will be triggered - an onchange
             followed by an onclick. The onchange will trigger the client
             action which will immediately start the PPR blocking, so the
             onclick will get consumed by the blocking code and no submit will
             occur. Setting this value to true will allow the click to go
             through.
      </description>
         <property-name>firstClickPassed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onload Javascript handler.</description>
         <property-name>onload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onunload Javascript handler.</description>
         <property-name>onunload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the id of the component to which you want the
        focus to be when the full page renders. The accessibility-mode
        must be set to "inaccessible" for this feature to be on.
      </description>
         <property-name>initialFocusId</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata>
               <scoped-id-holder>true</scoped-id-holder>
               <unsupported-agents>pda phone voice</unsupported-agents>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Body</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Body</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>load</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup load unload</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelPage org.apache.myfaces.trinidad.CoreForm</fmd:preferred-child-components>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlbody-holder</fmd:required-ancestor-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The script component supports	importing libraries, and inline	scripts.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/script.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlScript</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlScript</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlScript properties-->
      <property>
         <description>the	inline script</description>
         <property-name>text</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the	URI of a script	library	to import.</description>
         <property-name>source</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>if the script generates content
	    using document.write() or document.writeln(), set this to true.
	    It defaults	to false.
      </description>
         <property-name>generatesContent</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>the	IDs of the components that should trigger a partial update.
	 This component	will listen on the trigger components. If one of the
	 trigger components receives an	event that will	cause it to update
	 in some way, this component will request to be	updated	too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Script</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Script</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>source</fmd:default-property>
            <fmd:hidden>true</fmd:hidden>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Tag for the HTML head element.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/head.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlHead</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlHead</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlHead properties-->
      <property>
         <description>The title of the document.  (This title doesn't have to match the
            title on any contained panelPage.)
      </description>
         <property-name>title</property-name>
         <property-class>java.lang.String</property-class>
         <suggested-value>Title {0}</suggested-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Head</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Head</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>title</fmd:default-property>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlhead-holder</fmd:required-ancestor-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The meta component supports generating an html meta tag for things like reloading the page or configuring viewport characteristics.  It is also important to note that a meta HTML tag cannot have an ID so the component ID will not be seen in the browser source.</description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/meta.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlMeta</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlMeta</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlMeta properties-->
      <property>
         <description>the	name or the http-equiv attribute for the meta tag (see the type attribute for further configuration)</description>
         <property-name>name</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;how the name attribute is used.  Options are:
              &lt;ul&gt;&lt;li&gt;name - for "name" which is the most common use for meta tags
                &lt;/li&gt;&lt;li&gt;httpEquiv - for "http-equiv" which is the used in some legacy meta tags
                &lt;/li&gt;&lt;/ul&gt;
              &lt;/html&gt;</description>
         <property-name>type</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>name</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:required>false</fmd:required>
               <fmd:property-values>name httpEquiv</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the	content for the meta tag</description>
         <property-name>content</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Meta</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Meta</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>name</fmd:default-property>
            <fmd:hidden>false</fmd:hidden>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>RowLayout components can be used on their own, or to
          define a row of a tableLayout component.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/rowLayout.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlRowLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlRowLayout</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlRowLayout properties-->
      <property>
         <description>the default horizontal alignment of cells in this row.
              The acceptable values are "center", "left", "right", "start", and "end".
      </description>
         <property-name>halign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>right start left end center</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the default vertical alignment of cells in this row.
              The acceptable values are "middle", "top", and "bottom".
      </description>
         <property-name>valign</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>middle top bottom</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the preferred total width of the layout.
              This attribute is ignored when the row layout is inside
              of a table layout.
      </description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>an onclick Javascript handler.</description>
         <property-name>onclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an ondblclick Javascript handler.</description>
         <property-name>ondblclick</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousedown Javascript handler.</description>
         <property-name>onmousedown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseup Javascript handler.</description>
         <property-name>onmouseup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseover Javascript handler.</description>
         <property-name>onmouseover</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmousemove Javascript handler.</description>
         <property-name>onmousemove</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onmouseout Javascript handler.</description>
         <property-name>onmouseout</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeypress Javascript handler.</description>
         <property-name>onkeypress</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeydown Javascript handler.</description>
         <property-name>onkeydown</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onkeyup Javascript handler.</description>
         <property-name>onkeyup</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.RowLayout</component-family>
         <renderer-type>org.apache.myfaces.trinidad.RowLayout</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-event-name>click</fmd:default-event-name>
            <fmd:event-names>click dblclick mousedown mouseup mouseover mousemove mouseout
          keypress keydown keyup</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlCellFormat</fmd:preferred-child-components>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlrowlayout-holder</fmd:required-ancestor-contracts>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-htmlcellformat-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>frameBorderLayout is a layout bean which can be used to place seven
          frames at left, right, top, bottom, innerLeft, innerRight and center
          positions.
    </description>
      <icon>
         <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/frameBorderLayout.gif</small-icon>
      </icon>
      <component-type>org.apache.myfaces.trinidad.HtmlFrameBorderLayout</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlFrameBorderLayout</component-class><!--org.apache.myfaces.trinidad.HtmlFrameBorderLayout facets-->
      <facet>
         <description>The frame to be rendered in the center.</description>
         <facet-name>center</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered above the center frame.
                This frame's height attribute is used to allocate
                its height.
      </description>
         <facet-name>top</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered below the center frame.
                This frame's height attribute is used to allocate
                its height.
      </description>
         <facet-name>bottom</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered to the left of the center frame.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>left</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered to the right of the center frame.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>right</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred>true</fmd:preferred>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered to the left of the center frame,
                if the
                reading direction is left-to-right, or right otherwise.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>start</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered to the right of the center frame,
                if the
                reading direction is left-to-right, or left otherwise.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>end</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered between the left frame and
                the center frame.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>innerLeft</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered between the right frame and
                the center frame.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>innerRight</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered as the innerLeft frame,
                if the reading direction is left-to-right,
                or innerRight frame otherwise.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>innerStart</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>The frame to be rendered as the innerRight frame,
                if the reading direction is left-to-right,
                or innerLeft frame otherwise.
                This frame's width attribute is used to allocate
                its width.
      </description>
         <facet-name>innerEnd</facet-name>
         <facet-extension>
            <fmd:facet-metadata>
               <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            </fmd:facet-metadata>
            <facet-metadata/>
         </facet-extension>
      </facet>
      <facet>
         <description>These contents will be rendered inside HTML
              &lt;code&gt;NOFRAMES&lt;/code&gt; tags. Browsers that do not
              support frames will render these contents.
      </description>
         <facet-name>alternateContent</facet-name>
      </facet><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlFrameBorderLayout properties-->
      <property>
         <description>an onload Javascript handler.</description>
         <property-name>onload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>an onunload Javascript handler.</description>
         <property-name>onunload</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>EVENTS</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The proposed width of this frameBorderLayout.  This can be in
           pixels or percentage. This attribute is used only if this a nested
           frameBorderLayout in a left/right facet of a
           frameBorderLayout.
      </description>
         <property-name>width</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The proposed height of this frameBorderLayout.  This can be in
           pixels or percentage. This attribute is used only if this a nested
           frameBorderLayout in a top/bottom facet of a
           frameBorderLayout.
      </description>
         <property-name>height</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The size of frame spacing to be rendered.
      </description>
         <property-name>frameSpacing</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The size for the border width to be rendered.
      </description>
         <property-name>borderWidth</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The size for the frame border width to be rendered.
      </description>
         <property-name>frameBorderWidth</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.
      </description>
         <property-name>shortDesc</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.
      </description>
         <property-name>partialTriggers</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <property-metadata>
               <multi-scoped-id-holder>true</multi-scoped-id-holder>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>the CSS style class of the bean.</description>
         <property-name>styleClass</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the inline CSS style for this element</description>
         <property-name>inlineStyle</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.FrameBorderLayout</component-family>
         <renderer-type>org.apache.myfaces.trinidad.FrameBorderLayout</renderer-type>
         <component-metadata/>
         <unsupported-agents>pda phone voice</unsupported-agents>
         <fmd:component-metadata>
            <fmd:default-event-name>load</fmd:default-event-name>
            <fmd:event-names>load unload</fmd:event-names>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlFrame</fmd:preferred-child-components>
            <fmd:required-ancestor-contracts>org-apache-myfaces-trinidad-htmlframeborderlayout-holder</fmd:required-ancestor-contracts>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-htmlframe-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>&lt;html&gt;
          The html tag generates the &amp;lt;html&amp;gt; element for an HTML page.&lt;/html&gt;</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.HtmlHtml</component-type>
      <component-class>org.apache.myfaces.trinidad.component.html.HtmlHtml</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.HtmlHtml properties-->
      <property>
         <description>
        Set if the page should render in default standards mode, quirks mode, or strict mode.  Behavior of the modes are:&lt;ul&gt;
&lt;li&gt;"default": renders as transitional doctypes for both XHTML and HTML,
with &lt;a href="http://developer.mozilla.org/en/docs/Gecko's_%22Almost_Standards%22_Mode"&gt;"almost standards"&lt;/a&gt; rendering mode&lt;/li&gt;
&lt;li&gt;"strict": renders as a strict doctype for both XHTML and HTML, also
in standards rendering mode&lt;/li&gt;
&lt;li&gt;"quirks": renders HTML pages in quirks mode, and XHTML with
a transitional doctype, but standards mode  (there is no quirks mode for
XHTML).&lt;/li&gt;&lt;/ul&gt;
      </description>
         <property-name>mode</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>default</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:property-values>default strict quirks</fmd:property-values>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Html</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Html</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:preferred-child-components>org.apache.myfaces.trinidad.HtmlHead org.apache.myfaces.trinidad.HtmlBody org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:preferred-child-components>
            <fmd:satisfied-contracts>org-apache-myfaces-trinidad-htmlhead-holder org-apache-myfaces-trinidad-htmlbody-holder org-apache-myfaces-trinidad-htmlframeborderlayout-holder</fmd:satisfied-contracts>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>Choose is a base abstraction for components like chooseDate and chooseColor
          that presents users with a diagrammatic chooser like a calendar or palette.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.Choose</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXChoose</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.Choose</component-family>
         <renderer-type>org.apache.myfaces.trinidad.Choose</renderer-type>
      </component-extension>
   </component>
   <component>
      <description>Base class for input components whose value is true or false.</description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectBoolean</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectBoolean</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.Value properties-->
      <property>
         <description>the value of the component.  If the EL binding
for the "value" points to a bean property with a getter but no setter, and
this is an editable component, the component will be rendered 
in read-only mode.</description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a converter object</description>
         <property-name>converter</property-name>
         <property-class>javax.faces.convert.Converter</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.EditableValue properties-->
      <property>
         <description>whether the value is converted and validated immediately in the Apply Request Values phase, or is handled in the Process Validators phase, the default.  By default, values are converted and validated together in the Process Validators phase.  However, if you need access to the value of a component during Apply Request Values - for example, if you need to get the value from an actionListener on an immediate commandButton - then setting this to "immediate" makes that possible.
      </description>
         <property-name>immediate</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether the component's value is currently valid</description>
         <property-name>valid</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether a non-null, non-empty value must be entered.  If false, validators will not be executed when the value is null or empty.
      </description>
         <property-name>required</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
      </property>
      <property>
         <description>whether a local value is currently set.  If false, values are being retrieved from any attached ValueBinding
      </description>
         <property-name>localValueSet</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the current submitted value.  This value,
if non-null, is set by the Renderer to store a possibly invalid value
for later conversion or redisplay, and has not yet been converted
into the proper type for this component instance.   This method
should only be used by the decode() and validate() method
of this component, or its corresponding Renderer;  however, user code
may manually set it to null to erase any submitted value.
      </description>
         <property-name>submittedValue</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a validator method</description>
         <property-name>validator</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>a method reference to a value change listener</description>
         <property-name>valueChangeListener</property-name>
         <property-class>javax.faces.el.MethodBinding</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt; the message to be displayed, if 'required' validation fails.
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>requiredMessageDetail</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectBoolean properties-->
      <property>
         <description>whether or not the component is
              currently selected.  This is a typesafe alias for the "value"
              attribute. Note that "selected" and "value" attributes should not be used at the same time to avoid conflict.
      </description>
         <property-name>selected</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata>
               <alias-of>value</alias-of>
            </property-metadata>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectBoolean</component-family>
         <renderer-type>org.apache.myfaces.trinidad.SelectBoolean</renderer-type>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:default-property>label</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <component>
      <description>The UIXSelectItem class is the base concrete class for a single
          item which the user may select from the set of items in a list,
          choice, radio, or shuttle control.
    </description>
      <icon/>
      <component-type>org.apache.myfaces.trinidad.SelectItem</component-type>
      <component-class>org.apache.myfaces.trinidad.component.UIXSelectItem</component-class><!--javax.faces.Component properties-->
      <property>
         <description>&lt;html&gt;the identifier for the component.  The identifier
must follow a subset of the syntax allowed in HTML:
&lt;ul&gt;
&lt;li&gt;Must not be a zero-length String.&lt;/li&gt;
&lt;li&gt;First character must be an ASCII letter (A-Za-z) or an underscore ('_').&lt;/li&gt;
&lt;li&gt;Subsequent characters must be an ASCII letter or digit (A-Za-z0-9), an underscore ('_'), or a dash ('-').&lt;/li&gt;
&lt;/ul&gt;&lt;/html&gt;
      </description>
         <property-name>id</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>whether the component is rendered. When set to false, no output will be
		delivered for this component (the component will not in any way be rendered,
		and cannot be made visible on the client). If you want to change a component's
		rendered attribute from false to true
                using PPR, set the partialTrigger attribute of its parent component so the
                parent refreshes and in turn will render this component. 
      </description>
         <property-name>rendered</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <property-name>transient</property-name>
         <property-class>boolean</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:category-id>GENERAL</fmd:category-id>
               <fmd:value-expression>PROHIBITED</fmd:value-expression>
            </fmd:property-metadata>
            <property-metadata>
               <transient>true</transient>
            </property-metadata>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.ComponentBase properties-->
      <property>
         <description>a method reference to an attribute change listener.  Attribute change events are not delivered for any programmatic change to a property.  They are only delivered when a renderer changes a property without the application's specific request.  An example of an attribute change events might include the width of a column that supported client-side resizing.</description>
         <property-name>attributeChangeListener</property-name>
         <property-class>javax.el.MethodExpression</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:expert>true</fmd:expert>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property><!--org.apache.myfaces.trinidad.SelectItem properties-->
      <property>
         <description>the value used to identify this item when the
              parent control is submitted to the server.  If no value is specified
              for a particular item, the item's contents will be used as its
              value.
      </description>
         <property-name>value</property-name>
         <property-class>java.lang.Object</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <component-extension>
         <component-family>org.apache.myfaces.trinidad.SelectItem</component-family>
         <component-metadata/>
         <fmd:component-metadata>
            <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
            <fmd:default-property>itemValue</fmd:default-property>
         </fmd:component-metadata>
      </component-extension>
   </component>
   <converter>
      <converter-id>javax.faces.Short</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ShortConverter</converter-class>
   </converter>
   <converter>
      <converter-id>javax.faces.Byte</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ByteConverter</converter-class>
   </converter>
   <converter>
      <converter-id>javax.faces.Integer</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.IntegerConverter</converter-class>
   </converter>
   <converter>
      <display-name>Date Time Converter</display-name>
      <converter-id>javax.faces.DateTime</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DateTimeConverter</converter-class>
   </converter>
   <converter>
      <converter-id>javax.faces.Float</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.FloatConverter</converter-class>
   </converter>
   <converter>
      <converter-id>javax.faces.Long</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.LongConverter</converter-class>
   </converter>
   <converter>
      <converter-id>javax.faces.Double</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DoubleConverter</converter-class>
   </converter>
   <converter>
      <display-name>Number Converter</display-name>
      <converter-id>javax.faces.Number</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.NumberConverter</converter-class>
   </converter>
   <converter>
      <description>Converts string into java.util.Date and vice versa based on the pattern
          and style set.
    </description>
      <display-name>Date Time Converter</display-name>
      <converter-id>org.apache.myfaces.trinidad.DateTime</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DateTimeConverter</converter-class>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, for values that cannot be converted to date when
              the pattern / secondary pattern is set or when
              &lt;code&gt;type&lt;/code&gt; is set to
              &lt;code&gt;'date'&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt;
              is not set or is null.
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} an example of the format the converter is expecting
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertDate</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, for time based value that cannot be converted
              to date when &lt;code&gt;type&lt;/code&gt; is set to
              &lt;code&gt;'time'&lt;/code&gt;, &lt;code&gt;pattern&lt;/code&gt; is
              not set or is null
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} an example of the format the converter is expecting
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertTime</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, for date-time based value that cannot be converted
              to date when &lt;code&gt;type&lt;/code&gt; is set to
              &lt;code&gt;'both'&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt;
              is not set or is null.
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} an example of the format the converter is expecting
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertBoth</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Predefined formatting style which determines how the date component
               of a date string is to be formatted and parsed. Applied only if type
               is "date" or "both". Valid values are "shortish", "short", "default",
               "medium", "long", and "full". Default value is "shortish".
      </description>
         <property-name>dateStyle</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>shortish</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Locale whose predefined styles for dates and times are used during
               formatting or parsing. If not specified or if null, the Locale returned by
               FacesContext.getViewRoot().getLocale() will be used.
      </description>
         <property-name>locale</property-name>
         <property-class>java.util.Locale</property-class>
      </property>
      <property>
         <description>Custom formatting pattern which determines how the date/time string
              should be formatted and parsed.
      </description>
         <property-name>pattern</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Second pattern, which will be used as a second attempt to parse a
               string if the primary pattern or styles fail, but is never used for
               formatting strings.
      </description>
         <property-name>secondaryPattern</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>Predefined formatting style which determines how the time component of
               a date string is to be formatted and parsed. Applied only if type is
               "time" or "both". Valid values are "default", "short", "medium",
               "long", and "full". Default value is "short".
      </description>
         <property-name>timeStyle</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>short</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Time zone in which to interpret any time information in the date
               string. If not set here, picks this value from
               trinidad-config.xml configuration file. If not defined there, then
               it is defaulted to the value returned by TimeZone.getDefault() which is usually the server JVM timezone.
      </description>
         <property-name>timeZone</property-name>
         <property-class>java.util.TimeZone</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies what contents the string value will be formatted to
               include, or parsed. Valid values are "date", "time", and "both".
               Default value is "date".
      </description>
         <property-name>type</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>date</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
   </converter>
   <converter>
      <description>Converts an string, to and from java.awt.Color objects.</description>
      <display-name>Color Converter</display-name>
      <converter-id>org.apache.myfaces.trinidad.Color</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ColorConverter</converter-class>
      <property>
         <description>The set of acceptable patterns, as a whitespace sepa
rated list.
              The first pattern in the list will be used for formatting
              java.awt.Color values.  All patterns will be tried in
              order to convert Strings back into java.awt.Colors.
              If no patterns are set, the default is "#RRGGBB r,g,b".
      </description>
         <property-name>patterns</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Whether the converter should allow generation of a "
transparent"
color (a black color with an alpha of zero). The converter uses
a String version of "transparent" that is translated for the
user's locale.
      </description>
         <property-name>transparentAllowed</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, when users input does not match the specified
              pattern.
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} the pattern the converter is expecting
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvert</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </converter>
   <converter>
      <description>Converts an string to a Number and vice versa based on the 'pattern' or the 'type' set.
    </description>
      <display-name>Number Converter</display-name>
      <converter-id>org.apache.myfaces.trinidad.Number</converter-id>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.NumberConverter</converter-class>
      <property>
         <description>The ISO 4217 currency code, applied only when formatting currencies.
           Currency code can also be set for the entire application in trinidad-config.xml file.
           If currency code is not set on the converter, and if set on
           trinidad-config.xml configuration file it will be used by calling
           &lt;code&gt;RequestContext().getCurrenctInstance().getCurrencyCode().&lt;/code&gt;
           This currency code will be used during call to getAsString() for formatting,
           provided type is set to 'currency'.
      </description>
         <property-name>currencyCode</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
          Custom error message to be used, for creating detail part of the
          &lt;code&gt;FacesMessage&lt;/code&gt;, when
          &lt;code&gt;value&lt;/code&gt; cannot be converted to a number, when
          &lt;code&gt;type&lt;/code&gt; is set to
          &lt;code&gt;'currency'&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt;
          is null or not set.
         &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertCurrency</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
          Custom error message to be used, for creating detail part of the
          &lt;code&gt;FacesMessage&lt;/code&gt;, when
          &lt;code&gt;value&lt;/code&gt; cannot be converted to a number, when
          &lt;code&gt;type&lt;/code&gt; is set to &lt;code&gt;'number'&lt;/code&gt;
          and &lt;code&gt;pattern&lt;/code&gt; is null or not set.
         &lt;/p&gt;
         &lt;p&gt;
          &lt;strong&gt;
           Parameters:
          &lt;/strong&gt;
          &lt;ul&gt;
           &lt;li&gt;
            {0} the label that identifies the component
           &lt;/li&gt;
           &lt;li&gt;
            {1} value entered by the user
           &lt;/li&gt;
          &lt;/ul&gt;
         &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertNumber</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
          Custom error message to be used, for creating detail part of the
          &lt;code&gt;FacesMessage&lt;/code&gt; message, when
          &lt;code&gt;value&lt;/code&gt; cannot be converted to a number, based
          on the &lt;code&gt;pattern&lt;/code&gt; set.
         &lt;/p&gt;
         &lt;p&gt;
          &lt;strong&gt;
           Parameters:
          &lt;/strong&gt;
          &lt;ul&gt;
           &lt;li&gt;
            {0} the label that identifies the component
           &lt;/li&gt;
           &lt;li&gt;
            {1} value entered by the user
           &lt;/li&gt;
           &lt;li&gt;
            {2} the specified conversion pattern
           &lt;/li&gt;
          &lt;/ul&gt;
         &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertPattern</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;html&gt;&lt;p&gt;
          Custom error message to be used, for creating detail part of the
          &lt;code&gt;FacesMessage&lt;/code&gt;, when
          &lt;code&gt;value&lt;/code&gt; cannot be converted to a number, when
          &lt;code&gt;type&lt;/code&gt; is set to
          &lt;code&gt;'percent'&lt;/code&gt; and &lt;code&gt;pattern&lt;/code&gt;
          is null or not set.
         &lt;/p&gt;
         &lt;p&gt;
          &lt;strong&gt;
           Parameters:
          &lt;/strong&gt;
          &lt;ul&gt;
           &lt;li&gt;
            {0} the label that identifies the component
           &lt;/li&gt;
           &lt;li&gt;
            {1} value entered by the user
           &lt;/li&gt;
          &lt;/ul&gt;
         &lt;/p&gt;&lt;/html&gt;
      </description>
         <property-name>messageDetailConvertPercent</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>Currency symbol, is applied only when formatting currencies.
          If currency code is set then symbol will be ignored.
      </description>
         <property-name>currencySymbol</property-name>
         <property-class>java.lang.String</property-class>
      </property>
      <property>
         <description>Flag specifying whether formatted output will contain grouping separators.
          Default value is true.
      </description>
         <property-name>groupingUsed</property-name>
         <property-class>boolean</property-class>
         <default-value>true</default-value>
      </property>
      <property>
         <description>Flag specifying whether only the integer part of the value will be formatted
           and parsed. Default value is false.
      </description>
         <property-name>integerOnly</property-name>
         <property-class>boolean</property-class>
         <default-value>false</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Locale whose predefined styles for numbers are used during formatting and parsing.
          If not specified, the Locale returned by FacesContext.getViewRoot().getLocale()
          will be used.
      </description>
         <property-name>locale</property-name>
         <property-class>java.util.Locale</property-class>
      </property>
      <property>
         <description>Maximum number of digits that will be formatted in the fractional portion of the
          output.
      </description>
         <property-name>maxFractionDigits</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Maximum number of digits that will be formatted in the integer portion of the
          output.
      </description>
         <property-name>maxIntegerDigits</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Minimum number of digits that will be formatted in the fractional portion of
           the output.
      </description>
         <property-name>minFractionDigits</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Minimum number of digits that will be formatted in the integer portion of the
          output.
      </description>
         <property-name>minIntegerDigits</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Custom formatting pattern which determins how the number string should be
          formatted and parsed.
      </description>
         <property-name>pattern</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specifies how the number string will be formatted and parsed.
           Valid values are "number", "currency", and "percent".
           Default value is "number".
      </description>
         <property-name>type</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>number</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
   </converter>
   <converter>
      <converter-for-class>java.lang.Short</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ShortConverter</converter-class>
   </converter>
   <converter>
      <converter-for-class>java.lang.Byte</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ByteConverter</converter-class>
   </converter>
   <converter>
      <converter-for-class>java.lang.Integer</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.IntegerConverter</converter-class>
   </converter>
   <converter>
      <converter-for-class>java.lang.Long</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.LongConverter</converter-class>
   </converter>
   <converter>
      <converter-for-class>java.lang.Float</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.FloatConverter</converter-class>
   </converter>
   <converter>
      <converter-for-class>java.lang.Double</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DoubleConverter</converter-class>
   </converter>
   <converter>
      <description>Color Converter</description>
      <converter-for-class>java.awt.Color</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.ColorConverter</converter-class>
   </converter>
   <converter>
      <display-name>Date Time Converter</display-name>
      <converter-for-class>java.util.Date</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DateTimeConverter</converter-class>
   </converter>
   <converter>
      <display-name>Date Time Converter</display-name>
      <converter-for-class>java.util.Calendar</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.DateTimeConverter</converter-class>
   </converter>
   <converter>
      <display-name>Number Converter</display-name>
      <converter-for-class>java.lang.Number</converter-for-class>
      <converter-class>org.apache.myfaces.trinidadinternal.convert.NumberConverter</converter-class>
   </converter>
   <referenced-bean>
      <description>implicit object provided by Trinidad</description>
      <display-name>Request Context</display-name>
      <referenced-bean-name>requestContext</referenced-bean-name>
      <referenced-bean-class>org.apache.myfaces.trinidad.context.RequestContext</referenced-bean-class>
   </referenced-bean>
   <referenced-bean>
      <description>Trinidad Page Flow Scope Map</description>
      <display-name>Page Flow Scope</display-name>
      <referenced-bean-name>pageFlowScope</referenced-bean-name>
      <referenced-bean-class>java.util.Map</referenced-bean-class>
   </referenced-bean>
   <render-kit>
      <render-kit-id>org.apache.myfaces.trinidadinternal.core</render-kit-id>
      <render-kit-class>org.apache.myfaces.trinidadinternal.renderkit.core.CoreRenderKit</render-kit-class>
   </render-kit>
   <render-kit>
      <render-kit-id>org.apache.myfaces.trinidad.core.desktop</render-kit-id>
      <render-kit-class>org.apache.myfaces.trinidadinternal.renderkit.core.desktop.DesktopRenderKit</render-kit-class>
   </render-kit>
   <render-kit>
      <render-kit-id>org.apache.myfaces.trinidad.core.pda</render-kit-id>
      <render-kit-class>org.apache.myfaces.trinidadinternal.renderkit.core.pda.PdaRenderKit</render-kit-class>
   </render-kit>
   <lifecycle>
      <phase-listener>org.apache.myfaces.trinidadinternal.context.TrinidadPhaseListener</phase-listener>
   </lifecycle>
   <validator>
      <validator-id>javax.faces.LongRange</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.LongRangeValidator</validator-class>
   </validator>
   <validator>
      <validator-id>javax.faces.DoubleRange</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.DoubleRangeValidator</validator-class>
   </validator>
   <validator>
      <display-name>validateDateTimeRange</display-name>
      <validator-id>org.apache.myfaces.trinidad.DateTimeRange</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.DateTimeRangeValidator</validator-class>
      <property>
         <description>
             the maximum java.util.Date.
           ISO 8601 date strings, of the form 'yyyy-MM-dd'
           (for example 2004-06-22) is also allowed.
           This will be parsed to date. When binding to Date objects, it is advised to create the Date object with 
maximum value for any date-time components that aren't displayed (usually hours, minutes, seconds, milliseconds) 
to allow the largest range of values to be accepted.
      </description>
         <property-name>maximum</property-name>
         <property-class>java.util.Date</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>
             The minimum java.util.Date.
           ISO 8601 date strings, of the form 'yyyy-MM-dd'
           (for example 2004-06-22) are also allowed.
           This will be parsed to date. When binding to Date objects, it is advised to create the Date object with zeroed-out
values for any date-time components that aren't displayed (usually hours, minutes, seconds, milliseconds)
to allow the largest range of values to be accepted.]] 
      </description>
         <property-name>minimum</property-name>
         <property-class>java.util.Date</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value exceeds the &lt;code&gt;maximum&lt;/code&gt; value
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the maximum allowed date
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMaximum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;minimum&lt;/code&gt;
           value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed date
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMinimum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           if input value is not with in the range, when
           &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; is
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed date
            &lt;/li&gt;
            &lt;li&gt;
             {3} the maximum allowed date
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailNotInRange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateLength</display-name>
      <validator-id>org.apache.myfaces.trinidad.Length</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.LengthValidator</validator-class>
      <property>
         <description>the maximum length of the entered value.
      </description>
         <property-name>maximum</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the minimum length of the entered value.
      </description>
         <property-name>minimum</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value exceeds the &lt;code&gt;maximum&lt;/code&gt; length
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the maximum allowed length
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMaximum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;minimum&lt;/code&gt;
           length.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed length
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMinimum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           if input value is not of an acceptable length, when both
           &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; are
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed length
            &lt;/li&gt;
            &lt;li&gt;
             {3} the maximum allowed length
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailNotInRange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           if input value is not of an acceptable length, when both
           &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; are
           set to the same value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the allowed length
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailExact</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateLongRange</display-name>
      <validator-id>org.apache.myfaces.trinidad.LongRange</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.LongRangeValidator</validator-class>
      <property>
         <description>The maximum long value of the entered value.
      </description>
         <property-name>maximum</property-name>
         <property-class>long</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The minimum long value of the entered value..
      </description>
         <property-name>minimum</property-name>
         <property-class>long</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value exceeds the &lt;code&gt;maximum&lt;/code&gt; value
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the maximum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMaximum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;minimum&lt;/code&gt;
           value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMinimum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           if input value is not with in the range, when
           &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; is
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed value
            &lt;/li&gt;
            &lt;li&gt;
             {3} the maximum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailNotInRange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateDoubleRange</display-name>
      <validator-id>org.apache.myfaces.trinidad.DoubleRange</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.DoubleRangeValidator</validator-class>
      <property>
         <description>The maximum double value of the entered value.
      </description>
         <property-name>maximum</property-name>
         <property-class>double</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>The minimum double value of the entered value..
      </description>
         <property-name>minimum</property-name>
         <property-class>double</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value exceeds the &lt;code&gt;maximum&lt;/code&gt; value
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the maximum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMaximum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;minimum&lt;/code&gt;
           value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailMinimum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           if input value is not with in the range, when
           &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; is
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the minimum allowed value
            &lt;/li&gt;
            &lt;li&gt;
             {3} the maximum allowed value
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailNotInRange</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateRegularExpression</display-name>
      <validator-id>org.apache.myfaces.trinidad.RegExp</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.RegExpValidator</validator-class>
      <property>
         <description>pattern to be matched in the input value.</description>
         <property-name>pattern</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, when users input does not match the specified
              pattern.
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} represents the 'pattern' expected in the input
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;
      </description>
         <property-name>messageDetailNoMatch</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateDateRestriction</display-name>
      <validator-id>org.apache.myfaces.trinidad.DateRestriction</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.DateRestrictionValidator</validator-class>
      <property>
         <description>Specify the month which are invalid for your use case.
           The attribute takes a whitespace delimited list of months.
           Possible values are jan, feb, mar, apr, may, jun, jul, aug, sep, oct, nov, dec.
      </description>
         <property-name>invalidMonths</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>Specify the weekdays which are invalid for your use case.
           The attribute takes whitespace delimited list of weekdays.
           Possible values are sun, mon, tue, wed, thu, fri, sat.
      </description>
         <property-name>invalidDaysOfWeek</property-name>
         <property-class>java.lang.String[]</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>To specifiy a concrete List of Dates, use the invalidDays attribute and wire it
           to a DateListProvider implementation. This returns a list of dates, which are invalid.
      </description>
         <property-name>invalidDays</property-name>
         <property-class>org.apache.myfaces.trinidad.model.DateListProvider</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value exceeds the &lt;code&gt;invalidMonths&lt;/code&gt; value
           set.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the invalid month
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailInvalidMonths</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;invalidDaysOfWeek&lt;/code&gt;
           value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the invalid weekday
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailInvalidDaysOfWeek</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
           The detail error message to be used for constructing faces messages,
           when input value is less than the set &lt;code&gt;invalidDate&lt;/code&gt;
           value.
          &lt;/p&gt;
          &lt;p&gt;
           &lt;strong&gt;
            Parameters:
           &lt;/strong&gt;
           &lt;ul&gt;
            &lt;li&gt;
             {0} the label that identifies the component
            &lt;/li&gt;
            &lt;li&gt;
             {1} value entered by the user
            &lt;/li&gt;
            &lt;li&gt;
             {2} the invalid date
            &lt;/li&gt;
           &lt;/ul&gt;
          &lt;/p&gt;
      </description>
         <property-name>messageDetailInvalidDays</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <validator>
      <display-name>validateByteLength</display-name>
      <validator-id>org.apache.myfaces.trinidad.ByteLength</validator-id>
      <validator-class>org.apache.myfaces.trinidadinternal.validator.ByteLengthValidator</validator-class>
      <property>
         <description>maximum number of allowable bytes when the string is encoded</description>
         <property-name>maximum</property-name>
         <property-class>int</property-class>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>the Java encoding used for the string.</description>
         <property-name>encoding</property-name>
         <property-class>java.lang.String</property-class>
         <default-value>iso-8859-1</default-value>
         <property-extension>
            <fmd:property-metadata>
               <fmd:preferred>true</fmd:preferred>
            </fmd:property-metadata>
            <property-metadata/>
         </property-extension>
      </property>
      <property>
         <description>&lt;p&gt;
              Custom error message to be used, for creating detail part of
              faces message, when conversion fails for input that
              exceeds the maximum byte length.
             &lt;/p&gt;
             &lt;p&gt;
              &lt;strong&gt;
               Parameters:
              &lt;/strong&gt;
              &lt;ul&gt;
               &lt;li&gt;
                {0} the label that identifies the component
               &lt;/li&gt;
               &lt;li&gt;
                {1} value entered by the user
               &lt;/li&gt;
               &lt;li&gt;
                {2} the maximum length
               &lt;/li&gt;
              &lt;/ul&gt;
             &lt;/p&gt;
      </description>
         <property-name>messageDetailMaximum</property-name>
         <property-class>java.lang.String</property-class>
         <property-extension>
            <property-metadata>
               <translatable>true</translatable>
            </property-metadata>
         </property-extension>
      </property>
   </validator>
   <faces-config-extension>
      <fmd:global-metadata>
         <fmd:contract-definitions>
            <fmd:contract id="org-apache-myfaces-trinidad-head-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Head Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.HtmlHead</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-htmlframeborderlayout-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Frame Border Layout Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.component.html.HtmlFrameBorderLayout</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-htmlbody-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Body Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.HtmlBody</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-htmlframe-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Frame Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.HtmlFrame</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-htmlrowlayout-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Row Layout Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.HtmlRowLayout</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-htmlcellformat-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad HTML Cell Format Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.HtmlCellFormat</fmd:description>
        
            </fmd:contract>
            <fmd:contract id="org-apache-myfaces-trinidad-corecolumn-holder">
          
               <fmd:display-name>Apache MyFaces Trinidad Core Column Holder</fmd:display-name>
          
               <fmd:description>Expects component children of type org.apache.myfaces.trinidad.CoreColumn</fmd:description>
        
            </fmd:contract>
         </fmd:contract-definitions>
         <fmd:faces-taglib-definitions>
            <fmd:faces-taglib>
               <fmd:uri>http://myfaces.apache.org/trinidad</fmd:uri>
               <fmd:short-name>tr</fmd:short-name>
               <fmd:display-name>Apache Trinidad Core</fmd:display-name>
               <fmd:description/>
               <fmd:icon/>
               <fmd:tag>
                  <fmd:name>validateDateTimeRange</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.DateTimeRange</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateLength</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.Length</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateLongRange</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.LongRange</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateDoubleRange</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.DoubleRange</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateRegExp</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.RegExp</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateDateRestriction</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.DateRestriction</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>validateByteLength</fmd:name>
                  <fmd:validator-id>org.apache.myfaces.trinidad.ByteLength</fmd:validator-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>convertDateTime</fmd:name>
                  <fmd:converter-id>org.apache.myfaces.trinidad.DateTime</fmd:converter-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>convertColor</fmd:name>
                  <fmd:converter-id>org.apache.myfaces.trinidad.Color</fmd:converter-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>convertNumber</fmd:name>
                  <fmd:converter-id>org.apache.myfaces.trinidad.Number</fmd:converter-id>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>switcher</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.Switcher</fmd:component-type>
                  <fmd:renderer-type/>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelBorderLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelBorderLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.BorderLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>outputLabel</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreOutputLabel</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Label</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>singleStepButtonBar</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSingleStepButtonBar</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ButtonBar</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>showDetailItem</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreShowDetailItem</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Item</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelChoice</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelChoice</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Choice</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>goLink</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreGoLink</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Link</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>page</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePage</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Page</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>train</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreTrain</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Train</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelHorizontalLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelHorizontalLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.HorizontalLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelTip</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelTip</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Tip</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectBooleanCheckbox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectBooleanCheckbox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Checkbox</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>navigationPane</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreNavigationPane</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Pane</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>chart</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreChart</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Chart</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>icon</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreIcon</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Icon</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>statusIndicator</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreStatusIndicator</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.StatusIndicator</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>column</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreColumn</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Column</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>spacer</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSpacer</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Spacer</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputColor</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputColor</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Color</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>treeTable</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreTreeTable</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.TreeTable</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectItem</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectItem</fmd:component-type>
                  <fmd:renderer-type/>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelList</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelList</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.List</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>chooseDate</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreChooseDate</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Date</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>processChoiceBar</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreProcessChoiceBar</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ChoiceBar</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputHidden</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputHidden</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Hidden</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelSideBar</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelSideBar</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.SideBar</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>media</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreMedia</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Media</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelAccordion</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelAccordion</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Accordion</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelBox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelBox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Box</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>commandLink</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreCommandLink</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Link</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>outputDocument</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreOutputDocument</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Document</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>tree</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreTree</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Tree</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>showDetail</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreShowDetail</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ShowDetail</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputFile</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputFile</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.File</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectOrderShuttle</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectOrderShuttle</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Shuttle</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelPopup</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelPopup</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Popup</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>commandButton</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreCommandButton</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Button</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>styleSheet</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreStyleSheet</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.StyleSheet</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectRangeChoiceBar</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectRangeChoiceBar</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ChoiceBar</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>image</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreImage</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Image</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelFormLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelFormLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.FormLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>message</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreMessage</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Message</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectOneChoice</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectOneChoice</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Choice</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>navigationTree</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreNavigationTree</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.NavigationTree</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelButtonBar</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelButtonBar</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ButtonBar</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelRadio</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelRadio</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Radio</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelPage</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelPage</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Page</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectManyCheckbox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectManyCheckbox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Checkbox</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>messages</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreMessages</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Messages</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputNumberSpinbox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputNumberSpinbox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.NumberSpinbox</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>form</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreForm</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Form</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputListOfValues</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputListOfValues</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Text</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>subform</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSubform</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Subform</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>resetButton</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreResetButton</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Button</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectBooleanRadio</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectBooleanRadio</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Radio</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelLabelAndMessage</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelLabelAndMessage</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.LabelAndMessage</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelHeader</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelHeader</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Header</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>showDetailHeader</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreShowDetailHeader</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Header</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>outputText</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreOutputText</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Text</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>poll</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePoll</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Poll</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>goButton</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreGoButton</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Button</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>breadCrumbs</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreBreadCrumbs</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.BreadCrumbs</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>legend</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreLegend</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Legend</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputDate</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputDate</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Date</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelPageHeader</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelPageHeader</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.PageHeader</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectOneRadio</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectOneRadio</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Radio</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>chooseColor</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreChooseColor</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Color</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>commandNavigationItem</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreCommandNavigationItem</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.NavigationItem</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>table</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreTable</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Table</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>progressIndicator</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreProgressIndicator</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Indicator</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelTabbed</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelTabbed</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Tab</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>inputText</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreInputText</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Text</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>outputFormatted</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreOutputFormatted</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Formatted</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>importScript</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreImportScript</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.ImportScript</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>separator</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSeparator</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Separator</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectOneListbox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectOneListbox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Listbox</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectManyListbox</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectManyListbox</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Listbox</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelGroupLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.GroupLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>document</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreDocument</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Document</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>selectManyShuttle</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CoreSelectManyShuttle</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Shuttle</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>panelCaptionGroup</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.CorePanelCaptionGroup</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.PanelCaptionGroup</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>iterator</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.Iterator</fmd:component-type>
                  <fmd:renderer-type/>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>group</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.Group</fmd:component-type>
                  <fmd:renderer-type/>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>cellFormat</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlCellFormat</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.CellFormat</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>tableLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlTableLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.TableLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>frame</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlFrame</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Frame</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>body</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlBody</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Body</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>script</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlScript</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Script</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>head</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlHead</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Head</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>meta</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlMeta</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Meta</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>rowLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlRowLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.RowLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>frameBorderLayout</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlFrameBorderLayout</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.FrameBorderLayout</fmd:renderer-type>
               </fmd:tag>
               <fmd:tag>
                  <fmd:name>html</fmd:name>
                  <fmd:component-type>org.apache.myfaces.trinidad.HtmlHtml</fmd:component-type>
                  <fmd:renderer-type>org.apache.myfaces.trinidad.Html</fmd:renderer-type>
               </fmd:tag>
            </fmd:faces-taglib>
         </fmd:faces-taglib-definitions>
      </fmd:global-metadata>
   </faces-config-extension>
</faces-config>